/*     */ package li.cil.oc.util;
/*     */ import scala.collection.Seq;
/*     */ import scala.collection.mutable.BitSet;
/*     */ import scala.runtime.BoxesRunTime;
/*     */ 
/*     */ public final class FontUtils$ {
/*     */   public static final FontUtils$ MODULE$;
/*     */   
/*     */   public BitSet li$cil$oc$util$FontUtils$$defined_double_wide() {
/*  10 */     return this.li$cil$oc$util$FontUtils$$defined_double_wide;
/*     */   } private final BitSet li$cil$oc$util$FontUtils$$defined_double_wide; private final int codepoint_limit;
/*     */   public int codepoint_limit() {
/*  13 */     return this.codepoint_limit; } public int wcwidth(int charCode) {
/*  14 */     return li$cil$oc$util$FontUtils$$defined_double_wide().apply(BoxesRunTime.boxToInteger(charCode)) ? 2 : 1;
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public final int li$cil$oc$util$FontUtils$$c_wcwidth$1(int charCode, int[] table$1, int[] wtable$1) {
/* 206 */     return (charCode < 255) ? (
/* 207 */       ((charCode + 1 & 0x7F) >= 33) ? 1 : (
/* 208 */       (charCode > 0) ? -1 : 
/* 209 */       0)) : (
/*     */       
/* 211 */       ((charCode & 0xFFFEFFFF) < 65534) ? (
/* 212 */       ((table$1[table$1[charCode >> 8] * 32 + ((charCode & 0xFF) >> 3)] >> (charCode & 0x7) & 0x1) == 1) ? 0 : (
/* 213 */       ((wtable$1[wtable$1[charCode >> 8] * 32 + ((charCode & 0xFF) >> 3)] >> (charCode & 0x7) & 0x1) == 1) ? 2 : 
/* 214 */       1)) : (
/*     */       
/* 216 */       ((charCode & 0xFFFE) == 65534) ? -1 : (
/* 217 */       (charCode >= 131072 && charCode < 262144) ? 2 : (
/* 218 */       (charCode == 917505 || (charCode >= 917536 && charCode < 917631) || (charCode >= 917760 && charCode < 917999)) ? 0 : 
/* 219 */       1))));
/*     */   }
/*     */   public final class FontUtils$$anonfun$1 extends AbstractFunction1<Object, Object> implements Serializable { public static final long serialVersionUID = 0L; private final int[] table$1;
/*     */     private final int[] wtable$1;
/*     */     
/*     */     public FontUtils$$anonfun$1(int[] table$1, int[] wtable$1) {}
/*     */     
/*     */     public final Object apply(int i) {
/* 227 */       return (FontUtils$.MODULE$.li$cil$oc$util$FontUtils$$c_wcwidth$1(i, this.table$1, this.wtable$1) == 2) ? 
/* 228 */         FontUtils$.MODULE$.li$cil$oc$util$FontUtils$$defined_double_wide().$plus$eq(i) : BoxedUnit.UNIT;
/*     */     } }
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   private FontUtils$() {
/* 268 */     MODULE$ = this;
/*     */     this.li$cil$oc$util$FontUtils$$defined_double_wide = (BitSet)scala.collection.mutable.BitSet$.MODULE$.apply((Seq)scala.collection.immutable.Nil$.MODULE$);
/*     */     this.codepoint_limit = 1114112;
/*     */     int[] table = (int[])scala.Array$.MODULE$.apply((Seq)scala.Predef$.MODULE$.wrapIntArray(new int[] { 
/*     */             16, 16, 16, 18, 19, 20, 21, 22, 23, 24, 
/*     */             25, 26, 27, 28, 29, 30, 31, 32, 16, 33, 
/*     */             16, 16, 16, 34, 35, 36, 37, 38, 39, 40, 
/*     */             16, 16, 41, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 42, 43, 16, 16, 44, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 45, 16, 46, 47, 
/*     */             48, 49, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 50, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 51, 16, 16, 52, 53, 16, 54, 55, 56, 
/*     */             16, 16, 16, 16, 16, 16, 57, 16, 16, 58, 
/*     */             16, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
/*     */             68, 69, 70, 16, 71, 72, 73, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 74, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 75, 76, 16, 16, 16, 77, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 78, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 79, 80, 16, 16, 16, 
/*     */             16, 16, 16, 16, 81, 16, 16, 16, 16, 16, 
/*     */             82, 83, 84, 16, 16, 16, 16, 16, 85, 86, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 248, 3, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 254, 255, 
/*     */             255, 255, 255, 191, 182, 0, 0, 0, 0, 0, 
/*     */             0, 0, 63, 0, 255, 23, 0, 0, 0, 0, 
/*     */             0, 248, 255, 255, 0, 0, 1, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 192, 191, 
/*     */             159, 61, 0, 0, 0, 128, 2, 0, 0, 0, 
/*     */             255, 255, 255, 7, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 192, 255, 1, 0, 0, 0, 
/*     */             0, 0, 0, 248, 15, 32, 0, 0, 192, 251, 
/*     */             239, 62, 0, 0, 0, 0, 0, 14, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 248, 255, 255, 255, 255, 255, 7, 0, 
/*     */             0, 0, 0, 0, 0, 20, 254, 33, 254, 0, 
/*     */             12, 0, 0, 0, 2, 0, 0, 0, 0, 0, 
/*     */             0, 16, 30, 32, 0, 0, 12, 0, 0, 64, 
/*     */             6, 0, 0, 0, 0, 0, 0, 16, 134, 57, 
/*     */             2, 0, 0, 0, 35, 0, 6, 0, 0, 0, 
/*     */             0, 0, 0, 16, 190, 33, 0, 0, 12, 0, 
/*     */             0, 252, 2, 0, 0, 0, 0, 0, 0, 144, 
/*     */             30, 32, 64, 0, 12, 0, 0, 0, 4, 0, 
/*     */             0, 0, 0, 0, 0, 0, 1, 32, 0, 0, 
/*     */             0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 
/*     */             0, 192, 193, 61, 96, 0, 12, 0, 0, 0, 
/*     */             2, 0, 0, 0, 0, 0, 0, 144, 64, 48, 
/*     */             0, 0, 12, 0, 0, 0, 3, 0, 0, 0, 
/*     */             0, 0, 0, 24, 30, 32, 0, 0, 12, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 4, 92, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 242, 7, 128, 127, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             242, 31, 0, 63, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 3, 0, 0, 160, 2, 0, 0, 
/*     */             0, 0, 0, 0, 254, 127, 223, 224, 255, 254, 
/*     */             255, 255, 255, 31, 64, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 224, 253, 102, 
/*     */             0, 0, 0, 195, 1, 0, 30, 0, 100, 32, 
/*     */             0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 224, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             28, 0, 0, 0, 28, 0, 0, 0, 12, 0, 
/*     */             0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 
/*     */             176, 63, 64, 254, 15, 32, 0, 0, 0, 0, 
/*     */             0, 120, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 
/*     */             0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 135, 1, 4, 14, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 128, 9, 0, 0, 
/*     */             0, 0, 0, 0, 64, 127, 229, 31, 248, 159, 
/*     */             0, 0, 0, 0, 0, 0, 255, 127, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 
/*     */             0, 0, 208, 23, 4, 0, 0, 0, 0, 248, 
/*     */             15, 0, 3, 0, 0, 0, 60, 59, 0, 0, 
/*     */             0, 0, 0, 0, 64, 163, 3, 0, 0, 0, 
/*     */             0, 0, 0, 240, 207, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 247, 255, 253, 33, 16, 3, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 
/*     */             255, 251, 0, 248, 0, 0, 0, 124, 0, 0, 
/*     */             0, 0, 0, 0, 223, 255, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 
/*     */             255, 255, 1, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 128, 3, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 
/*     */             0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 128, 247, 63, 0, 0, 0, 192, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             3, 0, 68, 8, 0, 0, 96, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 
/*     */             255, 255, 3, 128, 0, 0, 0, 0, 192, 63, 
/*     */             0, 0, 128, 255, 3, 0, 0, 0, 0, 0, 
/*     */             7, 0, 0, 0, 0, 0, 200, 51, 0, 0, 
/*     */             0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 126, 102, 0, 8, 16, 0, 0, 0, 0, 
/*     */             0, 16, 0, 0, 0, 0, 0, 0, 157, 193, 
/*     */             2, 0, 0, 0, 0, 48, 64, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 32, 33, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 0, 0, 0, 64, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 255, 255, 0, 0, 255, 255, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 192, 7, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 110, 240, 0, 0, 0, 0, 
/*     */             0, 135, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 
/*     */             240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 192, 255, 1, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             2, 0, 0, 0, 0, 0, 0, 255, 127, 0, 
/*     */             0, 0, 0, 0, 0, 128, 3, 0, 0, 0, 
/*     */             0, 0, 120, 38, 0, 32, 0, 0, 0, 0, 
/*     */             0, 0, 7, 0, 0, 0, 128, 239, 31, 0, 
/*     */             0, 0, 0, 0, 0, 0, 8, 0, 3, 0, 
/*     */             0, 0, 0, 0, 192, 127, 0, 30, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 
/*     */             211, 64, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 128, 248, 7, 0, 0, 3, 0, 0, 0, 
/*     */             0, 0, 0, 24, 1, 0, 0, 0, 192, 31, 
/*     */             31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 255, 92, 0, 0, 64, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             248, 133, 13, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 60, 176, 1, 0, 0, 48, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 248, 167, 
/*     */             1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 40, 191, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 224, 188, 15, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 128, 255, 6, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 240, 12, 1, 0, 0, 0, 
/*     */             254, 7, 0, 0, 0, 0, 248, 121, 128, 0, 
/*     */             126, 14, 0, 0, 0, 0, 0, 252, 127, 3, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 127, 191, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             252, 255, 255, 252, 109, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             126, 180, 191, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 
/*     */             0, 0, 0, 0, 255, 1, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             31, 0, 0, 0, 0, 0, 0, 0, 127, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 
/*     */             0, 128, 7, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 96, 15, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             128, 3, 248, 255, 231, 15, 0, 0, 0, 60, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 255, 255, 255, 255, 255, 255, 127, 248, 
/*     */             255, 255, 255, 255, 255, 31, 32, 0, 16, 0, 
/*     */             0, 248, 254, 255, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 127, 255, 255, 249, 219, 7, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 240, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             240, 7, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0 }, ), scala.reflect.ClassTag$.MODULE$.Int());
/*     */     int[] wtable = (int[])scala.Array$.MODULE$.apply((Seq)scala.Predef$.MODULE$.wrapIntArray(new int[] { 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 18, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 19, 16, 20, 21, 22, 
/*     */             16, 16, 16, 23, 16, 16, 24, 25, 26, 27, 
/*     */             28, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 29, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 30, 16, 16, 16, 16, 31, 
/*     */             16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 32, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 
/*     */             17, 16, 16, 16, 33, 34, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 35, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
/*     */             17, 36, 17, 17, 37, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 17, 38, 39, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
/*     */             16, 16, 16, 16, 16, 16, 40, 41, 42, 43, 
/*     */             44, 45, 46, 47, 16, 48, 49, 16, 16, 16, 
/*     */             16, 16, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 12, 0, 6, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 30, 9, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 96, 0, 0, 48, 0, 0, 0, 0, 0, 
/*     */             0, 255, 15, 0, 0, 0, 0, 128, 0, 0, 
/*     */             8, 0, 2, 12, 0, 96, 48, 64, 16, 0, 
/*     */             0, 4, 44, 36, 32, 12, 0, 0, 0, 1, 
/*     */             0, 0, 0, 80, 184, 0, 0, 0, 0, 0, 
/*     */             0, 0, 224, 0, 0, 0, 1, 128, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 
/*     */             0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 255, 255, 255, 251, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 15, 0, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 63, 0, 0, 0, 
/*     */             255, 15, 255, 255, 255, 255, 255, 255, 255, 127, 
/*     */             254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             127, 254, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 224, 255, 255, 255, 255, 255, 
/*     */             254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 127, 255, 255, 255, 255, 255, 7, 255, 255, 
/*     */             255, 255, 15, 0, 255, 255, 255, 255, 255, 127, 
/*     */             255, 255, 255, 255, 255, 0, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 31, 255, 255, 
/*     */             255, 255, 255, 255, 127, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 255, 255, 255, 31, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 15, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 255, 3, 
/*     */             0, 0, 255, 255, 255, 255, 247, 255, 127, 15, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 254, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 
/*     */             0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 0, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 7, 0, 255, 255, 255, 127, 
/*     */             0, 0, 0, 0, 0, 0, 7, 0, 240, 0, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 15, 
/*     */             16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 
/*     */             254, 7, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 7, 0, 255, 255, 255, 255, 
/*     */             255, 15, 255, 1, 3, 0, 63, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 
/*     */             1, 224, 191, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 223, 255, 255, 15, 0, 255, 255, 255, 255, 
/*     */             255, 135, 15, 0, 255, 255, 17, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 127, 253, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 159, 
/*     */             255, 255, 255, 255, 255, 255, 255, 63, 0, 120, 
/*     */             255, 255, 255, 0, 0, 4, 0, 0, 96, 0, 
/*     */             16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 248, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             255, 255, 0, 0, 0, 0, 0, 0, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 63, 16, 39, 0, 
/*     */             0, 24, 240, 7, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 255, 15, 0, 0, 0, 224, 255, 255, 
/*     */             255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
/*     */             123, 252, 255, 255, 255, 255, 231, 199, 255, 255, 
/*     */             255, 231, 255, 255, 255, 255, 255, 255, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/*     */             0, 0, 15, 7, 7, 0, 63, 0, 0, 0, 
/*     */             0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, ), scala.reflect.ClassTag$.MODULE$.Int());
/*     */     li.cil.oc.OpenComputers$.MODULE$.log().info("Initializing font glyph width cache...");
/*     */     long time = System.currentTimeMillis();
/*     */     scala.runtime.RichInt$.MODULE$.until$extension0(scala.Predef$.MODULE$.intWrapper(0), codepoint_limit()).foreach((Function1)new FontUtils$$anonfun$1(table, wtable));
/*     */   }
/*     */ }


/* Location:              C:\Users\shame\AppData\Roaming\PrismLauncher\instances\GT_New_Horizons_2.7.4_Java_17-21\.minecraft\mods\OpenComputers-1.10.30-GTNH.jar!\li\cil\o\\util\FontUtils$.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */