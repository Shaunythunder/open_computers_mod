/*    */ package li.cil.oc.common.item;
/*    */ 
/*    */ import li.cil.oc.common.inventory.Inventory;
/*    */ import li.cil.oc.common.item.traits.Delegate;
/*    */ import net.minecraft.item.ItemStack;
/*    */ 
/*    */ @ScalaSignature(bytes = "\006\001\005eb\001B\001\003\0015\021aaU3sm\026\024(BA\002\005\003\021IG/Z7\013\005\0251\021AB2p[6|gN\003\002\b\021\005\021qn\031\006\003\023)\t1aY5m\025\005Y\021A\0017j\007\001\0312\001\001\b\025!\ty!#D\001\021\025\005\t\022!B:dC2\f\027BA\n\021\005\031\te.\037*fMB\021Q\003G\007\002-)\021qCA\001\007iJ\f\027\016^:\n\005e1\"\001\003#fY\026<\027\r^3\t\021m\001!Q1A\005\002q\ta\001]1sK:$X#A\017\021\005yyR\"\001\002\n\005\001\022!!\003#fY\026<\027\r^8s\021!\021\003A!A!\002\023i\022a\0029be\026tG\017\t\005\tI\001\021)\031!C\001K\005!A/[3s+\0051\003CA\b(\023\tA\003CA\002J]RD\001B\013\001\003\002\003\006IAJ\001\006i&,'\017\t\005\006Y\001!\t!L\001\007y%t\027\016\036 \025\0079z\003\007\005\002\037\001!)1d\013a\001;!)Ae\013a\001M!9!\007\001b\001\n\003\032\024aD;oY>\034\027\r\\5{K\022t\025-\\3\026\003Q\002\"!\016\036\016\003YR!a\016\035\002\t1\fgn\032\006\002s\005!!.\031<b\023\tYdG\001\004TiJLgn\032\005\007{\001\001\013\021\002\033\002!UtGn\\2bY&TX\r\032(b[\026\004\003\"B \001\t#\002\025a\003;p_2$\030\016\035(b[\026,\022!\021\t\004\037\t#\024BA\"\021\005\031y\005\017^5p]\")Q\t\001C!\r\0061!/\031:jif$\"a\022)\021\005!sU\"A%\013\005\rQ%BA&M\003%i\027N\\3de\0064GOC\001N\003\rqW\r^\005\003\037&\023!\"\0228v[J\013'/\033;z\021\025\tF\t1\001S\003\025\031H/Y2l!\tA5+\003\002U\023\nI\021\n^3n'R\f7m\033\005\006-\002!\t%J\001\r[\006D8\013^1dWNK'0Z\004\0061\002AI!W\001\020\021\026d\007/\032:J]Z,g\016^8ssB\021!lW\007\002\001\031)A\f\001E\005;\ny\001*\0327qKJLeN^3oi>\024\030pE\002\\=\006\004\"!N0\n\005\0014$AB(cU\026\034G\017\005\002cK6\t1M\003\002e\t\005I\021N\034<f]R|'/_\005\003M\016\024qbU3sm\026\024\030J\034<f]R|'/\037\005\006Ym#\t\001\033\013\0023\"9!n\027a\001\n\003Y\027!C2p]R\f\027N\\3s+\005\021\006bB7\\\001\004%\tA\\\001\016G>tG/Y5oKJ|F%Z9\025\005=\024\bCA\bq\023\t\t\bC\001\003V]&$\bbB:m\003\003\005\rAU\001\004q\022\n\004BB;\\A\003&!+\001\006d_:$\030-\0338fe\002BQa\036\001\005Ra\fq\002^8pYRL\007/\022=uK:$W\r\032\013\004_fT\b\"B)w\001\004\021\006\"B>w\001\004a\030a\002;p_2$\030\016\035\t\006{\006\005\021QA\007\002}*\021q\020O\001\005kRLG.C\002\002\004y\024A\001T5tiB!\021qAA\007\035\ry\021\021B\005\004\003\027\001\022A\002)sK\022,g-C\002<\003\037Q1!a\003\021\021\035\t\031\002\001C!\003+\t\001c\0348Ji\026l'+[4ii\016c\027nY6\025\017I\0139\"!\007\002(!1\021+!\005A\002IC\001\"a\007\002\022\001\007\021QD\001\006o>\024H\016\032\t\005\003?\t\031#\004\002\002\")\031\0211\004&\n\t\005\025\022\021\005\002\006/>\024H\016\032\005\t\003S\t\t\0021\001\002,\0051\001\017\\1zKJ\004B!!\f\00265\021\021q\006\006\005\003S\t\tDC\002\0024)\013a!\0328uSRL\030\002BA\034\003_\021A\"\0228uSRL\b\013\\1zKJ\004")
/*    */ public class Server implements Delegate {
/*    */   private final Delegator parent;
/*    */   private final int tier;
/*    */   private final String unlocalizedName;
/*    */   private volatile HelperInventory$ HelperInventory$module;
/*    */   private boolean showInItemList;
/*    */   private final int itemId;
/*    */   private Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon;
/*    */   
/* 17 */   public boolean showInItemList() { return this.showInItemList; } public void showInItemList_$eq(boolean x$1) { this.showInItemList = x$1; } public int itemId() { return this.itemId; } public Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon() { return this.li$cil$oc$common$item$traits$Delegate$$_icon; } public void li$cil$oc$common$item$traits$Delegate$$_icon_$eq(Option<IIcon> x$1) { this.li$cil$oc$common$item$traits$Delegate$$_icon = x$1; } public void li$cil$oc$common$item$traits$Delegate$_setter_$itemId_$eq(int x$1) { this.itemId = x$1; } public Seq<Object> tooltipData() { return Delegate.class.tooltipData(this); } public ItemStack createItemStack(int amount) { return Delegate.class.createItemStack(this, amount); } public boolean doesSneakBypassUse(BlockPosition position, EntityPlayer player) { return Delegate.class.doesSneakBypassUse(this, position, player); } public boolean onItemUseFirst(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUseFirst(this, stack, player, position, side, hitX, hitY, hitZ); } public boolean onItemUse(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUse(this, stack, player, position, side, hitX, hitY, hitZ); } public EnumAction getItemUseAction(ItemStack stack) { return Delegate.class.getItemUseAction(this, stack); } public int getMaxItemUseDuration(ItemStack stack) { return Delegate.class.getMaxItemUseDuration(this, stack); } public ItemStack onEaten(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onEaten(this, stack, world, player); } public void onPlayerStoppedUsing(ItemStack stack, EntityPlayer player, int duration) { Delegate.class.onPlayerStoppedUsing(this, stack, player, duration); } public void update(ItemStack stack, World world, Entity player, int slot, boolean selected) { Delegate.class.update(this, stack, world, player, slot, selected); } public int tierFromDriver(ItemStack stack) { return Delegate.class.tierFromDriver(this, stack); } public int color(ItemStack stack, int pass) { return Delegate.class.color(this, stack, pass); } public ItemStack getContainerItem(ItemStack stack) { return Delegate.class.getContainerItem(this, stack); } public boolean hasContainerItem(ItemStack stack) { return Delegate.class.hasContainerItem(this, stack); } public Option<String> displayName(ItemStack stack) { return Delegate.class.displayName(this, stack); } @SideOnly(Side.CLIENT) public void tooltipLines(ItemStack stack, EntityPlayer player, List tooltip, boolean advanced) { Delegate.class.tooltipLines(this, stack, player, tooltip, advanced); } public void tooltipCosts(ItemStack stack, List tooltip) { Delegate.class.tooltipCosts(this, stack, tooltip); } public boolean isDamageable() { return Delegate.class.isDamageable(this); } public int damage(ItemStack stack) { return Delegate.class.damage(this, stack); } public int maxDamage(ItemStack stack) { return Delegate.class.maxDamage(this, stack); } @SideOnly(Side.CLIENT) public Option<IIcon> icon() { return Delegate.class.icon(this); } @SideOnly(Side.CLIENT) public void icon_$eq(IIcon value) { Delegate.class.icon_$eq(this, value); } @SideOnly(Side.CLIENT) public Option<IIcon> icon(ItemStack stack, int pass) { return Delegate.class.icon(this, stack, pass); } @SideOnly(Side.CLIENT) public void registerIcons(IIconRegister iconRegister) { Delegate.class.registerIcons(this, iconRegister); } public boolean equals(ItemStack stack) { return Delegate.class.equals(this, stack); } public int createItemStack$default$1() { return Delegate.class.createItemStack$default$1(this); } public Delegator parent() { return this.parent; } public int tier() { return this.tier; } public Server(Delegator parent, int tier) { Delegate.class.$init$(this);
/* 18 */     this.unlocalizedName = (new StringBuilder()).append(Delegate.class.unlocalizedName(this)).append(BoxesRunTime.boxToInteger(tier)).toString(); } public String unlocalizedName() { return this.unlocalizedName; }
/*    */    public Option<String> tooltipName() {
/* 20 */     return scala.Option$.MODULE$.apply(Delegate.class.unlocalizedName(this));
/*    */   } public EnumRarity rarity(ItemStack stack) {
/* 22 */     return li.cil.oc.util.Rarity$.MODULE$.byTier(tier());
/*    */   } public int maxStackSize() {
/* 24 */     return 1;
/*    */   }
/* 26 */   private HelperInventory$ li$cil$oc$common$item$Server$$HelperInventory$lzycompute() { synchronized (this) { if (this.HelperInventory$module == null) this.HelperInventory$module = new HelperInventory$(this);  null; return this.HelperInventory$module; }  } public HelperInventory$ li$cil$oc$common$item$Server$$HelperInventory() { return (this.HelperInventory$module == null) ? li$cil$oc$common$item$Server$$HelperInventory$lzycompute() : this.HelperInventory$module; } public class HelperInventory$ implements ServerInventory { private ItemStack container; private final Option<ItemStack>[] li$cil$oc$common$inventory$ItemStackInventory$$inventory; private volatile boolean bitmap$0; public int tier() { return ServerInventory.class.tier(this); } public int func_70302_i_() { return ServerInventory.class.getSizeInventory(this); } public String inventoryName() { return ServerInventory.class.inventoryName(this); } public int func_70297_j_() { return ServerInventory.class.getInventoryStackLimit(this); } public boolean func_70300_a(EntityPlayer player) { return ServerInventory.class.isUseableByPlayer(this, player); } public boolean func_94041_b(int slot, ItemStack stack) { return ServerInventory.class.isItemValidForSlot(this, slot, stack); } private Option[] li$cil$oc$common$inventory$ItemStackInventory$$inventory$lzycompute() { synchronized (this) { if (!this.bitmap$0) { this.li$cil$oc$common$inventory$ItemStackInventory$$inventory = (Option<ItemStack>[])ItemStackInventory.class.li$cil$oc$common$inventory$ItemStackInventory$$inventory((ItemStackInventory)this); this.bitmap$0 = true; }  return (Option[])this.li$cil$oc$common$inventory$ItemStackInventory$$inventory; }  } public Option<ItemStack>[] li$cil$oc$common$inventory$ItemStackInventory$$inventory() { return this.bitmap$0 ? this.li$cil$oc$common$inventory$ItemStackInventory$$inventory : (Option<ItemStack>[])li$cil$oc$common$inventory$ItemStackInventory$$inventory$lzycompute(); } public Option<ItemStack>[] items() { return (Option<ItemStack>[])ItemStackInventory.class.items((ItemStackInventory)this); } public void reinitialize() { ItemStackInventory.class.reinitialize((ItemStackInventory)this); } public void func_70296_d() { ItemStackInventory.class.markDirty((ItemStackInventory)this); } public void updateItems(int slot, ItemStack stack) { Inventory.class.updateItems((Inventory)this, slot, stack); } public ItemStack func_70301_a(int slot) { return Inventory.class.getStackInSlot((Inventory)this, slot); } public void func_70299_a(int slot, ItemStack stack) { Inventory.class.setInventorySlotContents((Inventory)this, slot, stack); } public String func_145825_b() { return Inventory.class.getInventoryName((Inventory)this); } public void load(NBTTagCompound nbt) { Inventory.class.load((Inventory)this, nbt); } public void save(NBTTagCompound nbt) { Inventory.class.save((Inventory)this, nbt); } public void onItemAdded(int slot, ItemStack stack) { Inventory.class.onItemAdded((Inventory)this, slot, stack); } public void onItemRemoved(int slot, ItemStack stack) { Inventory.class.onItemRemoved((Inventory)this, slot, stack); } public boolean func_145818_k_() { return SimpleInventory.class.hasCustomInventoryName((SimpleInventory)this); } public int getInventoryStackRequired() { return SimpleInventory.class.getInventoryStackRequired((SimpleInventory)this); } public void func_70295_k_() { SimpleInventory.class.openInventory((SimpleInventory)this); } public void func_70305_f() { SimpleInventory.class.closeInventory((SimpleInventory)this); } public ItemStack func_70298_a(int slot, int amount) { return SimpleInventory.class.decrStackSize((SimpleInventory)this, slot, amount); } public ItemStack func_70304_b(int slot) { return SimpleInventory.class.getStackInSlotOnClosing((SimpleInventory)this, slot); } public HelperInventory$(Server $outer) { SimpleInventory.class.$init$((SimpleInventory)this); Inventory.class.$init$((Inventory)this); ItemStackInventory.class.$init$((ItemStackInventory)this); ServerInventory.class.$init$(this);
/* 27 */       this.container = null; } public ItemStack container() { return this.container; } public void container_$eq(ItemStack x$1) { this.container = x$1; } }
/*    */   
/*    */   public final class Server$$anonfun$tooltipExtended$1 extends AbstractFunction1<Object, ItemStack> implements Serializable { public static final long serialVersionUID = 0L; public final ItemStack apply(int slot) { return this.$outer.li$cil$oc$common$item$Server$$HelperInventory().func_70301_a(slot); } public Server$$anonfun$tooltipExtended$1(Server $outer) {} } public final class Server$$anonfun$tooltipExtended$2 extends AbstractFunction1<ItemStack, Object> implements Serializable {
/*    */     public static final long serialVersionUID = 0L; public final boolean apply(ItemStack item) { return !(item == null); } public Server$$anonfun$tooltipExtended$2(Server $outer) {}
/* 31 */   } public void tooltipExtended(ItemStack stack, List tooltip) { Delegate.class.tooltipExtended(this, stack, tooltip);
/* 32 */     if (li.cil.oc.client.KeyBindings$.MODULE$.showExtendedTooltips())
/* 33 */     { li$cil$oc$common$item$Server$$HelperInventory().container_$eq(stack);
/* 34 */       li$cil$oc$common$item$Server$$HelperInventory().reinitialize();
/* 35 */       Map items = scala.collection.mutable.Map$.MODULE$.empty(); ((TraversableLike)scala.runtime.RichInt$.MODULE$
/* 36 */         .until$extension0(scala.Predef$.MODULE$.intWrapper(0), li$cil$oc$common$item$Server$$HelperInventory().func_70302_i_()).map((Function1)new Server$$anonfun$tooltipExtended$1(this), scala.collection.immutable.IndexedSeq$.MODULE$.canBuildFrom())).withFilter((Function1)new Server$$anonfun$tooltipExtended$2(this)).foreach((Function1)new Server$$anonfun$tooltipExtended$3(this, items));
/*    */ 
/*    */ 
/*    */       
/* 40 */       if (items.nonEmpty())
/* 41 */       { tooltip.addAll(li.cil.oc.util.Tooltip$.MODULE$.get("Server.Components", (Seq)scala.Predef$.MODULE$.genericWrapArray(new Object[0])));
/* 42 */         scala.Predef$.MODULE$.refArrayOps((Object[])scala.Predef$.MODULE$.refArrayOps((Object[])items.keys().toArray(scala.reflect.ClassTag$.MODULE$.apply(String.class))).sorted((Ordering)scala.math.Ordering$String$.MODULE$)).foreach((Function1)new Server$$anonfun$tooltipExtended$4(this, tooltip, items)); }  }  } public final class Server$$anonfun$tooltipExtended$3 extends AbstractFunction1<ItemStack, Map<String, Object>> implements Serializable {
/* 43 */     public static final long serialVersionUID = 0L; private final Map items$1; public Server$$anonfun$tooltipExtended$3(Server $outer, Map items$1) {} public final Map<String, Object> apply(ItemStack item) { String itemName = item.func_82833_r(); return (Map<String, Object>)this.items$1.$plus$eq(scala.Predef$ArrowAssoc$.MODULE$.$minus$greater$extension(scala.Predef$.MODULE$.ArrowAssoc(itemName), this.items$1.contains(itemName) ? BoxesRunTime.boxToInteger(BoxesRunTime.unboxToInt(this.items$1.apply(itemName)) + 1) : BoxesRunTime.boxToInteger(1))); } } public final class Server$$anonfun$tooltipExtended$4 extends AbstractFunction1<String, Object> implements Serializable { public static final long serialVersionUID = 0L; private final List tooltip$1; public final boolean apply(String itemName) { return this.tooltip$1.add((new StringBuilder()).append("- ").append(this.items$1.apply(itemName)).append("x ").append(itemName).toString()); }
/*    */     
/*    */     private final Map items$1;
/*    */     
/*    */     public Server$$anonfun$tooltipExtended$4(Server $outer, List tooltip$1, Map items$1) {} }
/*    */   
/*    */   public ItemStack onItemRightClick(ItemStack stack, World world, EntityPlayer player) {
/* 50 */     if (!player.func_70093_af()) {
/*    */ 
/*    */ 
/*    */       
/* 54 */       player.openGui(li.cil.oc.OpenComputers$.MODULE$, li.cil.oc.common.GuiType$.MODULE$.Server().id(), world, 0, 0, 0);
/* 55 */       player.func_71038_i();
/*    */     } 
/* 57 */     return stack;
/*    */   }
/*    */ }


/* Location:              C:\Users\shame\AppData\Roaming\PrismLauncher\instances\GT_New_Horizons_2.7.4_Java_17-21\.minecraft\mods\OpenComputers-1.10.30-GTNH.jar!\li\cil\oc\common\item\Server.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */