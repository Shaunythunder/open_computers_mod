/*    */ package li.cil.oc.common.item;
/*    */ @ScalaSignature(bytes = "\006\001U3A!\001\002\001\033\tQA+\0312mKR\034\025m]3\013\005\r!\021\001B5uK6T!!\002\004\002\r\r|W.\\8o\025\t9\001\"\001\002pG*\021\021BC\001\004G&d'\"A\006\002\0051L7\001A\n\005\0019!\"\004\005\002\020%5\t\001CC\001\022\003\025\0318-\0317b\023\t\031\002C\001\004B]f\024VM\032\t\003+ai\021A\006\006\003/\t\ta\001\036:bSR\034\030BA\r\027\005!!U\r\\3hCR,\007CA\013\034\023\tabC\001\005Ji\026lG+[3s\021!q\002A!b\001\n\003y\022A\0029be\026tG/F\001!!\t\t#%D\001\003\023\t\031#AA\005EK2,w-\031;pe\"AQ\005\001B\001B\003%\001%A\004qCJ,g\016\036\021\t\021\035\002!Q1A\005\002!\nA\001^5feV\t\021\006\005\002\020U%\0211\006\005\002\004\023:$\b\002C\027\001\005\003\005\013\021B\025\002\013QLWM\035\021\t\013=\002A\021\001\031\002\rqJg.\033;?)\r\t$g\r\t\003C\001AQA\b\030A\002\001BQa\n\030A\002%Bq!\016\001C\002\023\005c'A\bv]2|7-\0317ju\026$g*Y7f+\0059\004C\001\035>\033\005I$B\001\036<\003\021a\027M\\4\013\003q\nAA[1wC&\021a(\017\002\007'R\024\030N\\4\t\r\001\003\001\025!\0038\003A)h\016\\8dC2L'0\0323OC6,\007\005C\003C\001\021E3)\001\buS\026\024hI]8n\tJLg/\032:\025\005%\"\005\"B#B\001\0041\025!B:uC\016\\\007CA$N\033\005A%BA\002J\025\tQ5*A\005nS:,7M]1gi*\tA*A\002oKRL!A\024%\003\023%#X-\\*uC\016\\\007\"\002)\001\t#\n\026a\003;p_2$\030\016\035(b[\026,\022A\025\t\004\037M;\024B\001+\021\005\031y\005\017^5p]\002")
/*    */ public class TabletCase implements ItemTier { private final Delegator parent; private final int tier; private final String unlocalizedName;
/*    */   @SideOnly(Side.CLIENT)
/*  5 */   public void tooltipLines(ItemStack stack, EntityPlayer player, List tooltip, boolean advanced) { ItemTier.class.tooltipLines(this, stack, player, tooltip, advanced); } private boolean showInItemList; private final int itemId; private Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon; public boolean showInItemList() { return this.showInItemList; } public void showInItemList_$eq(boolean x$1) { this.showInItemList = x$1; } public int itemId() { return this.itemId; } public Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon() { return this.li$cil$oc$common$item$traits$Delegate$$_icon; } public void li$cil$oc$common$item$traits$Delegate$$_icon_$eq(Option<IIcon> x$1) { this.li$cil$oc$common$item$traits$Delegate$$_icon = x$1; } public void li$cil$oc$common$item$traits$Delegate$_setter_$itemId_$eq(int x$1) { this.itemId = x$1; } public Seq<Object> tooltipData() { return Delegate.class.tooltipData((Delegate)this); } public int maxStackSize() { return Delegate.class.maxStackSize((Delegate)this); } public ItemStack createItemStack(int amount) { return Delegate.class.createItemStack((Delegate)this, amount); } public boolean doesSneakBypassUse(BlockPosition position, EntityPlayer player) { return Delegate.class.doesSneakBypassUse((Delegate)this, position, player); } public boolean onItemUseFirst(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUseFirst((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public boolean onItemUse(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUse((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public ItemStack onItemRightClick(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onItemRightClick((Delegate)this, stack, world, player); } public EnumAction getItemUseAction(ItemStack stack) { return Delegate.class.getItemUseAction((Delegate)this, stack); } public int getMaxItemUseDuration(ItemStack stack) { return Delegate.class.getMaxItemUseDuration((Delegate)this, stack); } public ItemStack onEaten(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onEaten((Delegate)this, stack, world, player); } public void onPlayerStoppedUsing(ItemStack stack, EntityPlayer player, int duration) { Delegate.class.onPlayerStoppedUsing((Delegate)this, stack, player, duration); } public void update(ItemStack stack, World world, Entity player, int slot, boolean selected) { Delegate.class.update((Delegate)this, stack, world, player, slot, selected); } public EnumRarity rarity(ItemStack stack) { return Delegate.class.rarity((Delegate)this, stack); } public int color(ItemStack stack, int pass) { return Delegate.class.color((Delegate)this, stack, pass); } public ItemStack getContainerItem(ItemStack stack) { return Delegate.class.getContainerItem((Delegate)this, stack); } public boolean hasContainerItem(ItemStack stack) { return Delegate.class.hasContainerItem((Delegate)this, stack); } public Option<String> displayName(ItemStack stack) { return Delegate.class.displayName((Delegate)this, stack); } public void tooltipExtended(ItemStack stack, List tooltip) { Delegate.class.tooltipExtended((Delegate)this, stack, tooltip); } public void tooltipCosts(ItemStack stack, List tooltip) { Delegate.class.tooltipCosts((Delegate)this, stack, tooltip); } public boolean isDamageable() { return Delegate.class.isDamageable((Delegate)this); } public int damage(ItemStack stack) { return Delegate.class.damage((Delegate)this, stack); } public int maxDamage(ItemStack stack) { return Delegate.class.maxDamage((Delegate)this, stack); } @SideOnly(Side.CLIENT) public Option<IIcon> icon() { return Delegate.class.icon((Delegate)this); } @SideOnly(Side.CLIENT) public void icon_$eq(IIcon value) { Delegate.class.icon_$eq((Delegate)this, value); } @SideOnly(Side.CLIENT) public Option<IIcon> icon(ItemStack stack, int pass) { return Delegate.class.icon((Delegate)this, stack, pass); } @SideOnly(Side.CLIENT) public void registerIcons(IIconRegister iconRegister) { Delegate.class.registerIcons((Delegate)this, iconRegister); } public boolean equals(ItemStack stack) { return Delegate.class.equals((Delegate)this, stack); } public int createItemStack$default$1() { return Delegate.class.createItemStack$default$1((Delegate)this); } public Delegator parent() { return this.parent; } public int tier() { return this.tier; } public TabletCase(Delegator parent, int tier) { Delegate.class.$init$((Delegate)this); ItemTier.class.$init$(this);
/*  6 */     this.unlocalizedName = (new StringBuilder()).append(Delegate.class.unlocalizedName((Delegate)this)).append(BoxesRunTime.boxToInteger(tier)).toString(); } public String unlocalizedName() { return this.unlocalizedName; }
/*    */    public int tierFromDriver(ItemStack stack) {
/*  8 */     return tier();
/*    */   } public Option<String> tooltipName() {
/* 10 */     return Option$.MODULE$.apply(Delegate.class.unlocalizedName((Delegate)this));
/*    */   } }


/* Location:              C:\Users\shame\AppData\Roaming\PrismLauncher\instances\GT_New_Horizons_2.7.4_Java_17-21\.minecraft\mods\OpenComputers-1.10.30-GTNH.jar!\li\cil\oc\common\item\TabletCase.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */