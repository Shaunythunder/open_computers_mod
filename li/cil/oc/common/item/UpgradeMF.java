/*    */ package li.cil.oc.common.item;
/*    */ 
/*    */ import li.cil.oc.common.item.traits.Delegate;
/*    */ 
/*    */ @ScalaSignature(bytes = "\006\001I4A!\001\002\001\033\tIQ\013]4sC\022,WJ\022\006\003\007\021\tA!\033;f[*\021QAB\001\007G>lWn\0348\013\005\035A\021AA8d\025\tI!\"A\002dS2T\021aC\001\003Y&\034\001a\005\003\001\035QQ\002CA\b\023\033\005\001\"\"A\t\002\013M\034\027\r\\1\n\005M\001\"AB!osJ+g\r\005\002\02615\taC\003\002\030\005\0051AO]1jiNL!!\007\f\003\021\021+G.Z4bi\026\004\"!F\016\n\005q1\"\001C%uK6$\026.\032:\t\021y\001!Q1A\005\002}\ta\001]1sK:$X#\001\021\021\005\005\022S\"\001\002\n\005\r\022!!\003#fY\026<\027\r^8s\021!)\003A!A!\002\023\001\023a\0029be\026tG\017\t\005\006O\001!\t\001K\001\007y%t\027\016\036 \025\005%R\003CA\021\001\021\025qb\0051\001!\021\025a\003\001\"\021.\0039yg.\023;f[V\033XMR5sgR$\002BL\031=\0136\023v+\027\t\003\037=J!\001\r\t\003\017\t{w\016\\3b]\")!g\013a\001g\005)1\017^1dWB\021AGO\007\002k)\0211A\016\006\003oa\n\021\"\\5oK\016\024\030M\032;\013\003e\n1A\\3u\023\tYTGA\005Ji\026l7\013^1dW\")Qh\013a\001}\0051\001\017\\1zKJ\004\"aP\"\016\003\001S!!P!\013\005\t3\024AB3oi&$\0300\003\002E\001\naQI\034;jif\004F.Y=fe\")ai\013a\001\017\006A\001o\\:ji&|g\016\005\002I\0276\t\021J\003\002K\r\005!Q\017^5m\023\ta\025JA\007CY>\0347\016U8tSRLwN\034\005\006\035.\002\raT\001\005g&$W\r\005\002\020!&\021\021\013\005\002\004\023:$\b\"B*,\001\004!\026\001\0025jib\003\"aD+\n\005Y\003\"!\002$m_\006$\b\"\002-,\001\004!\026\001\0025jifCQAW\026A\002Q\013A\001[5u5\")A\f\001C);\006yAo\\8mi&\004X\t\037;f]\022,G\rF\002_C\n\004\"aD0\n\005\001\004\"\001B+oSRDQAM.A\002MBQaY.A\002\021\fq\001^8pYRL\007\017E\002fS.l\021A\032\006\003\025\036T\021\001[\001\005U\0064\030-\003\002kM\n!A*[:u!\tawN\004\002\020[&\021a\016E\001\007!J,G-\0324\n\005A\f(AB*ue&twM\003\002o!\001")
/*    */ public class UpgradeMF implements ItemTier {
/*    */   private final Delegator parent;
/*    */   private boolean showInItemList;
/*    */   
/*    */   @SideOnly(Side.CLIENT)
/* 11 */   public void tooltipLines(ItemStack stack, EntityPlayer player, List tooltip, boolean advanced) { ItemTier.class.tooltipLines(this, stack, player, tooltip, advanced); } private final int itemId; private Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon; public boolean showInItemList() { return this.showInItemList; } public void showInItemList_$eq(boolean x$1) { this.showInItemList = x$1; } public int itemId() { return this.itemId; } public Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon() { return this.li$cil$oc$common$item$traits$Delegate$$_icon; } public void li$cil$oc$common$item$traits$Delegate$$_icon_$eq(Option<IIcon> x$1) { this.li$cil$oc$common$item$traits$Delegate$$_icon = x$1; } public void li$cil$oc$common$item$traits$Delegate$_setter_$itemId_$eq(int x$1) { this.itemId = x$1; } public String unlocalizedName() { return Delegate.class.unlocalizedName((Delegate)this); } public Option<String> tooltipName() { return Delegate.class.tooltipName((Delegate)this); } public Seq<Object> tooltipData() { return Delegate.class.tooltipData((Delegate)this); } public int maxStackSize() { return Delegate.class.maxStackSize((Delegate)this); } public ItemStack createItemStack(int amount) { return Delegate.class.createItemStack((Delegate)this, amount); } public boolean doesSneakBypassUse(BlockPosition position, EntityPlayer player) { return Delegate.class.doesSneakBypassUse((Delegate)this, position, player); } public boolean onItemUse(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUse((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public ItemStack onItemRightClick(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onItemRightClick((Delegate)this, stack, world, player); } public EnumAction getItemUseAction(ItemStack stack) { return Delegate.class.getItemUseAction((Delegate)this, stack); } public int getMaxItemUseDuration(ItemStack stack) { return Delegate.class.getMaxItemUseDuration((Delegate)this, stack); } public ItemStack onEaten(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onEaten((Delegate)this, stack, world, player); } public void onPlayerStoppedUsing(ItemStack stack, EntityPlayer player, int duration) { Delegate.class.onPlayerStoppedUsing((Delegate)this, stack, player, duration); } public void update(ItemStack stack, World world, Entity player, int slot, boolean selected) { Delegate.class.update((Delegate)this, stack, world, player, slot, selected); } public EnumRarity rarity(ItemStack stack) { return Delegate.class.rarity((Delegate)this, stack); } public int tierFromDriver(ItemStack stack) { return Delegate.class.tierFromDriver((Delegate)this, stack); } public int color(ItemStack stack, int pass) { return Delegate.class.color((Delegate)this, stack, pass); } public ItemStack getContainerItem(ItemStack stack) { return Delegate.class.getContainerItem((Delegate)this, stack); } public boolean hasContainerItem(ItemStack stack) { return Delegate.class.hasContainerItem((Delegate)this, stack); } public Option<String> displayName(ItemStack stack) { return Delegate.class.displayName((Delegate)this, stack); } public void tooltipCosts(ItemStack stack, List tooltip) { Delegate.class.tooltipCosts((Delegate)this, stack, tooltip); } public boolean isDamageable() { return Delegate.class.isDamageable((Delegate)this); } public int damage(ItemStack stack) { return Delegate.class.damage((Delegate)this, stack); } public int maxDamage(ItemStack stack) { return Delegate.class.maxDamage((Delegate)this, stack); } @SideOnly(Side.CLIENT) public Option<IIcon> icon() { return Delegate.class.icon((Delegate)this); } @SideOnly(Side.CLIENT) public void icon_$eq(IIcon value) { Delegate.class.icon_$eq((Delegate)this, value); } @SideOnly(Side.CLIENT) public Option<IIcon> icon(ItemStack stack, int pass) { return Delegate.class.icon((Delegate)this, stack, pass); } @SideOnly(Side.CLIENT) public void registerIcons(IIconRegister iconRegister) { Delegate.class.registerIcons((Delegate)this, iconRegister); } public boolean equals(ItemStack stack) { return Delegate.class.equals((Delegate)this, stack); } public int createItemStack$default$1() { return Delegate.class.createItemStack$default$1((Delegate)this); } public Delegator parent() { return this.parent; } public UpgradeMF(Delegator parent) { Delegate.class.$init$((Delegate)this); ItemTier.class.$init$(this); }
/*    */   
/*    */   public boolean onItemUseFirst(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) {
/* 14 */     if (!player.field_70170_p.field_72995_K && player.func_70093_af()) {
/* 15 */       if (!stack.func_77942_o()) {
/* 16 */         stack.func_77982_d(new NBTTagCompound());
/*    */       }
/* 18 */       NBTTagCompound data = stack.func_77978_p();
/* 19 */       data.func_74783_a((new StringBuilder()).append(Settings$.MODULE$.namespace()).append("coord").toString(), new int[] { position.x(), position.y(), position.z(), player.field_70170_p.field_73011_w.field_76574_g, side });
/* 20 */       return true;
/*    */     } 
/* 22 */     return Delegate.class.onItemUseFirst((Delegate)this, stack, player, position, side, hitX, hitY, hitZ);
/*    */   }
/*    */   public void tooltipExtended(ItemStack stack, List<String> tooltip) {
/*    */     boolean bool;
/* 26 */     NBTTagCompound nBTTagCompound = stack.func_77978_p();
/* 27 */     if (nBTTagCompound != null) { NBTTagCompound nBTTagCompound1 = nBTTagCompound; bool = nBTTagCompound1.func_74764_b((new StringBuilder()).append(Settings$.MODULE$.namespace()).append("coord").toString()); }
/* 28 */     else { bool = false; }
/*    */     
/*    */     tooltip.add(Localization$Tooltip$.MODULE$.MFULinked(bool));
/*    */   }
/*    */ }


/* Location:              C:\Users\shame\AppData\Roaming\PrismLauncher\instances\GT_New_Horizons_2.7.4_Java_17-21\.minecraft\mods\OpenComputers-1.10.30-GTNH.jar!\li\cil\oc\common\item\UpgradeMF.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */