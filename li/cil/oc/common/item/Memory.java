/*   */ package li.cil.oc.common.item;@ScalaSignature(bytes = "\006\001\0353A!\001\002\001\033\t1Q*Z7pefT!a\001\003\002\t%$X-\034\006\003\013\031\taaY8n[>t'BA\004\t\003\ty7M\003\002\n\025\005\0311-\0337\013\003-\t!\001\\5\004\001M!\001A\004\013\033!\ty!#D\001\021\025\005\t\022!B:dC2\f\027BA\n\021\005\031\te.\037*fMB\021Q\003G\007\002-)\021qCA\001\007iJ\f\027\016^:\n\005e1\"\001\003#fY\026<\027\r^3\021\005UY\022B\001\017\027\005!IE/Z7US\026\024\b\002\003\020\001\005\013\007I\021A\020\002\rA\f'/\0328u+\005\001\003CA\021#\033\005\021\021BA\022\003\005%!U\r\\3hCR|'\017\003\005&\001\t\005\t\025!\003!\003\035\001\030M]3oi\002B\001b\n\001\003\006\004%\t\001K\001\005i&,'/F\001*!\ty!&\003\002,!\t\031\021J\034;\t\0215\002!\021!Q\001\n%\nQ\001^5fe\002BQa\f\001\005\002A\na\001P5oSRtDcA\0313gA\021\021\005\001\005\006=9\002\r\001\t\005\006O9\002\r!\013\005\bk\001\021\r\021\"\0217\003=)h\016\\8dC2L'0\0323OC6,W#A\034\021\005ajT\"A\035\013\005iZ\024\001\0027b]\036T\021\001P\001\005U\0064\030-\003\002?s\t11\013\036:j]\036Da\001\021\001!\002\0239\024\001E;oY>\034\027\r\\5{K\022t\025-\\3!\021\025\021\005\001\"\025D\003-!xn\0347uSBt\025-\\3\026\003\021\0032aD#8\023\t1\005C\001\004PaRLwN\034")
/*   */ public class Memory implements ItemTier { private final Delegator parent; private final int tier; private final String unlocalizedName; @SideOnly(Side.CLIENT)
/* 3 */   public void tooltipLines(ItemStack stack, EntityPlayer player, List tooltip, boolean advanced) { ItemTier.class.tooltipLines(this, stack, player, tooltip, advanced); } private boolean showInItemList; private final int itemId; private Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon; public boolean showInItemList() { return this.showInItemList; } public void showInItemList_$eq(boolean x$1) { this.showInItemList = x$1; } public int itemId() { return this.itemId; } public Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon() { return this.li$cil$oc$common$item$traits$Delegate$$_icon; } public void li$cil$oc$common$item$traits$Delegate$$_icon_$eq(Option<IIcon> x$1) { this.li$cil$oc$common$item$traits$Delegate$$_icon = x$1; } public void li$cil$oc$common$item$traits$Delegate$_setter_$itemId_$eq(int x$1) { this.itemId = x$1; } public Seq<Object> tooltipData() { return Delegate.class.tooltipData((Delegate)this); } public int maxStackSize() { return Delegate.class.maxStackSize((Delegate)this); } public ItemStack createItemStack(int amount) { return Delegate.class.createItemStack((Delegate)this, amount); } public boolean doesSneakBypassUse(BlockPosition position, EntityPlayer player) { return Delegate.class.doesSneakBypassUse((Delegate)this, position, player); } public boolean onItemUseFirst(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUseFirst((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public boolean onItemUse(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUse((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public ItemStack onItemRightClick(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onItemRightClick((Delegate)this, stack, world, player); } public EnumAction getItemUseAction(ItemStack stack) { return Delegate.class.getItemUseAction((Delegate)this, stack); } public int getMaxItemUseDuration(ItemStack stack) { return Delegate.class.getMaxItemUseDuration((Delegate)this, stack); } public ItemStack onEaten(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onEaten((Delegate)this, stack, world, player); } public void onPlayerStoppedUsing(ItemStack stack, EntityPlayer player, int duration) { Delegate.class.onPlayerStoppedUsing((Delegate)this, stack, player, duration); } public void update(ItemStack stack, World world, Entity player, int slot, boolean selected) { Delegate.class.update((Delegate)this, stack, world, player, slot, selected); } public EnumRarity rarity(ItemStack stack) { return Delegate.class.rarity((Delegate)this, stack); } public int tierFromDriver(ItemStack stack) { return Delegate.class.tierFromDriver((Delegate)this, stack); } public int color(ItemStack stack, int pass) { return Delegate.class.color((Delegate)this, stack, pass); } public ItemStack getContainerItem(ItemStack stack) { return Delegate.class.getContainerItem((Delegate)this, stack); } public boolean hasContainerItem(ItemStack stack) { return Delegate.class.hasContainerItem((Delegate)this, stack); } public Option<String> displayName(ItemStack stack) { return Delegate.class.displayName((Delegate)this, stack); } public void tooltipExtended(ItemStack stack, List tooltip) { Delegate.class.tooltipExtended((Delegate)this, stack, tooltip); } public void tooltipCosts(ItemStack stack, List tooltip) { Delegate.class.tooltipCosts((Delegate)this, stack, tooltip); } public boolean isDamageable() { return Delegate.class.isDamageable((Delegate)this); } public int damage(ItemStack stack) { return Delegate.class.damage((Delegate)this, stack); } public int maxDamage(ItemStack stack) { return Delegate.class.maxDamage((Delegate)this, stack); } @SideOnly(Side.CLIENT) public Option<IIcon> icon() { return Delegate.class.icon((Delegate)this); } @SideOnly(Side.CLIENT) public void icon_$eq(IIcon value) { Delegate.class.icon_$eq((Delegate)this, value); } @SideOnly(Side.CLIENT) public Option<IIcon> icon(ItemStack stack, int pass) { return Delegate.class.icon((Delegate)this, stack, pass); } @SideOnly(Side.CLIENT) public void registerIcons(IIconRegister iconRegister) { Delegate.class.registerIcons((Delegate)this, iconRegister); } public boolean equals(ItemStack stack) { return Delegate.class.equals((Delegate)this, stack); } public int createItemStack$default$1() { return Delegate.class.createItemStack$default$1((Delegate)this); } public Delegator parent() { return this.parent; } public int tier() { return this.tier; } public Memory(Delegator parent, int tier) { Delegate.class.$init$((Delegate)this); ItemTier.class.$init$(this);
/* 4 */     this.unlocalizedName = (new StringBuilder()).append(Delegate.class.unlocalizedName((Delegate)this)).append(BoxesRunTime.boxToInteger(tier)).toString(); } public String unlocalizedName() { return this.unlocalizedName; }
/*   */    public Option<String> tooltipName() {
/* 6 */     return Option$.MODULE$.apply(Delegate.class.unlocalizedName((Delegate)this));
/*   */   } }


/* Location:              C:\Users\shame\AppData\Roaming\PrismLauncher\instances\GT_New_Horizons_2.7.4_Java_17-21\.minecraft\mods\OpenComputers-1.10.30-GTNH.jar!\li\cil\oc\common\item\Memory.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */