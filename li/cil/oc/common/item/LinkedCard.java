/*    */ package li.cil.oc.common.item;
/*    */ 
/*    */ import li.cil.oc.common.item.traits.Delegate;
/*    */ 
/*    */ @ScalaSignature(bytes = "\006\001m3A!\001\002\001\033\tQA*\0338lK\022\034\025M\0353\013\005\r!\021\001B5uK6T!!\002\004\002\r\r|W.\\8o\025\t9\001\"\001\002pG*\021\021BC\001\004G&d'\"A\006\002\0051L7\001A\n\005\0019!\"\004\005\002\020%5\t\001CC\001\022\003\025\0318-\0317b\023\t\031\002C\001\004B]f\024VM\032\t\003+ai\021A\006\006\003/\t\ta\001\036:bSR\034\030BA\r\027\005!!U\r\\3hCR,\007CA\013\034\023\tabC\001\005Ji\026lG+[3s\021!q\002A!b\001\n\003y\022A\0029be\026tG/F\001!!\t\t#%D\001\003\023\t\031#AA\005EK2,w-\031;pe\"AQ\005\001B\001B\003%\001%A\004qCJ,g\016\036\021\t\013\035\002A\021\001\025\002\rqJg.\033;?)\tI#\006\005\002\"\001!)aD\na\001A!)A\006\001C![\005aAo\\8mi&\004H*\0338fgR)a&\r\037F-B\021qbL\005\003aA\021A!\0268ji\")!g\013a\001g\005)1\017^1dWB\021AGO\007\002k)\0211A\016\006\003oa\n\021\"\\5oK\016\024\030M\032;\013\003e\n1A\\3u\023\tYTGA\005Ji\026l7\013^1dW\")Qh\013a\001}\0051\001\017\\1zKJ\004\"aP\"\016\003\001S!!P!\013\005\t3\024AB3oi&$\0300\003\002E\001\naQI\034;jif\004F.Y=fe\")ai\013a\001\017\0069Ao\\8mi&\004\bc\001%N\0376\t\021J\003\002K\027\006!Q\017^5m\025\005a\025\001\0026bm\006L!AT%\003\t1K7\017\036\t\003!Ns!aD)\n\005I\003\022A\002)sK\022,g-\003\002U+\n11\013\036:j]\036T!A\025\t\t\013][\003\031\001-\002\021\005$g/\0318dK\022\004\"aD-\n\005i\003\"a\002\"p_2,\027M\034")
/*    */ public class LinkedCard implements ItemTier {
/*    */   private final Delegator parent;
/*    */   private boolean showInItemList;
/*    */   
/* 10 */   public boolean showInItemList() { return this.showInItemList; } private final int itemId; private Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon; public void showInItemList_$eq(boolean x$1) { this.showInItemList = x$1; } public int itemId() { return this.itemId; } public Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon() { return this.li$cil$oc$common$item$traits$Delegate$$_icon; } public void li$cil$oc$common$item$traits$Delegate$$_icon_$eq(Option<IIcon> x$1) { this.li$cil$oc$common$item$traits$Delegate$$_icon = x$1; } public void li$cil$oc$common$item$traits$Delegate$_setter_$itemId_$eq(int x$1) { this.itemId = x$1; } public String unlocalizedName() { return Delegate.class.unlocalizedName((Delegate)this); } public Option<String> tooltipName() { return Delegate.class.tooltipName((Delegate)this); } public Seq<Object> tooltipData() { return Delegate.class.tooltipData((Delegate)this); } public int maxStackSize() { return Delegate.class.maxStackSize((Delegate)this); } public ItemStack createItemStack(int amount) { return Delegate.class.createItemStack((Delegate)this, amount); } public boolean doesSneakBypassUse(BlockPosition position, EntityPlayer player) { return Delegate.class.doesSneakBypassUse((Delegate)this, position, player); } public boolean onItemUseFirst(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUseFirst((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public boolean onItemUse(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUse((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public ItemStack onItemRightClick(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onItemRightClick((Delegate)this, stack, world, player); } public EnumAction getItemUseAction(ItemStack stack) { return Delegate.class.getItemUseAction((Delegate)this, stack); } public int getMaxItemUseDuration(ItemStack stack) { return Delegate.class.getMaxItemUseDuration((Delegate)this, stack); } public ItemStack onEaten(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onEaten((Delegate)this, stack, world, player); } public void onPlayerStoppedUsing(ItemStack stack, EntityPlayer player, int duration) { Delegate.class.onPlayerStoppedUsing((Delegate)this, stack, player, duration); } public void update(ItemStack stack, World world, Entity player, int slot, boolean selected) { Delegate.class.update((Delegate)this, stack, world, player, slot, selected); } public EnumRarity rarity(ItemStack stack) { return Delegate.class.rarity((Delegate)this, stack); } public int tierFromDriver(ItemStack stack) { return Delegate.class.tierFromDriver((Delegate)this, stack); } public int color(ItemStack stack, int pass) { return Delegate.class.color((Delegate)this, stack, pass); } public ItemStack getContainerItem(ItemStack stack) { return Delegate.class.getContainerItem((Delegate)this, stack); } public boolean hasContainerItem(ItemStack stack) { return Delegate.class.hasContainerItem((Delegate)this, stack); } public Option<String> displayName(ItemStack stack) { return Delegate.class.displayName((Delegate)this, stack); } public void tooltipExtended(ItemStack stack, List tooltip) { Delegate.class.tooltipExtended((Delegate)this, stack, tooltip); } public void tooltipCosts(ItemStack stack, List tooltip) { Delegate.class.tooltipCosts((Delegate)this, stack, tooltip); } public boolean isDamageable() { return Delegate.class.isDamageable((Delegate)this); } public int damage(ItemStack stack) { return Delegate.class.damage((Delegate)this, stack); } public int maxDamage(ItemStack stack) { return Delegate.class.maxDamage((Delegate)this, stack); } @SideOnly(Side.CLIENT) public Option<IIcon> icon() { return Delegate.class.icon((Delegate)this); } @SideOnly(Side.CLIENT) public void icon_$eq(IIcon value) { Delegate.class.icon_$eq((Delegate)this, value); } @SideOnly(Side.CLIENT) public Option<IIcon> icon(ItemStack stack, int pass) { return Delegate.class.icon((Delegate)this, stack, pass); } @SideOnly(Side.CLIENT) public void registerIcons(IIconRegister iconRegister) { Delegate.class.registerIcons((Delegate)this, iconRegister); } public boolean equals(ItemStack stack) { return Delegate.class.equals((Delegate)this, stack); } public int createItemStack$default$1() { return Delegate.class.createItemStack$default$1((Delegate)this); } public Delegator parent() { return this.parent; } public LinkedCard(Delegator parent) { Delegate.class.$init$((Delegate)this); ItemTier.class.$init$(this); }
/*    */   
/*    */   public void tooltipLines(ItemStack stack, EntityPlayer player, List tooltip, boolean advanced) {
/* 13 */     NBTTagCompound data = stack.func_77978_p().func_74775_l((new StringBuilder()).append(Settings$.MODULE$.namespace()).append("data").toString());
/*    */     
/* 15 */     String channel = data.func_74779_i((new StringBuilder()).append(Settings$.MODULE$.namespace()).append("tunnel").toString());
/* 16 */     (stack.func_77942_o() && stack.func_77978_p().func_74764_b((new StringBuilder()).append(Settings$.MODULE$.namespace()).append("data").toString())) ? (data.func_74764_b((new StringBuilder()).append(Settings$.MODULE$.namespace()).append("tunnel").toString()) ? BoxesRunTime.boxToBoolean((channel.length() > 13) ? 
/* 17 */         tooltip.addAll(Tooltip$.MODULE$.get((new StringBuilder()).append(unlocalizedName()).append("_Channel").toString(), (Seq)Predef$.MODULE$.genericWrapArray(new Object[] { (new StringBuilder()).append(channel.substring(0, 13)).append("...").toString()
/*    */ 
/*    */               
/* 20 */               }))) : tooltip.addAll(Tooltip$.MODULE$.get((new StringBuilder()).append(unlocalizedName()).append("_Channel").toString(), (Seq)Predef$.MODULE$.genericWrapArray(new Object[] { channel })))) : BoxedUnit.UNIT) : BoxedUnit.UNIT;
/*    */ 
/*    */ 
/*    */     
/* 24 */     ItemTier.class.tooltipLines(this, stack, player, tooltip, advanced);
/*    */   }
/*    */ }


/* Location:              C:\Users\shame\AppData\Roaming\PrismLauncher\instances\GT_New_Horizons_2.7.4_Java_17-21\.minecraft\mods\OpenComputers-1.10.30-GTNH.jar!\li\cil\oc\common\item\LinkedCard.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */