/*   */ package li.cil.oc.common.item;
/*   */ @ScalaSignature(bytes = "\006\00113A!\001\002\001\033\taqI]1qQ&\0347oQ1sI*\0211\001B\001\005SR,WN\003\002\006\r\00511m\\7n_:T!a\002\005\002\005=\034'BA\005\013\003\r\031\027\016\034\006\002\027\005\021A.[\002\001'\025\001a\002\006\016\036!\ty!#D\001\021\025\005\t\022!B:dC2\f\027BA\n\021\005\031\te.\037*fMB\021Q\003G\007\002-)\021qCA\001\007iJ\f\027\016^:\n\005e1\"\001\003#fY\026<\027\r^3\021\005UY\022B\001\017\027\005!IE/Z7US\026\024\bCA\013\037\023\tybCA\004H!Vc\025n[3\t\021\005\002!Q1A\005\002\t\na\001]1sK:$X#A\022\021\005\021*S\"\001\002\n\005\031\022!!\003#fY\026<\027\r^8s\021!A\003A!A!\002\023\031\023a\0029be\026tG\017\t\005\tU\001\021)\031!C\001W\005!A/[3s+\005a\003CA\b.\023\tq\003CA\002J]RD\001\002\r\001\003\002\003\006I\001L\001\006i&,'\017\t\005\006e\001!\taM\001\007y%t\027\016\036 \025\007Q*d\007\005\002%\001!)\021%\ra\001G!)!&\ra\001Y!9\001\b\001b\001\n\003J\024aD;oY>\034\027\r\\5{K\022t\025-\\3\026\003i\002\"a\017!\016\003qR!!\020 \002\t1\fgn\032\006\002\005!!.\031<b\023\t\tEH\001\004TiJLgn\032\005\007\007\002\001\013\021\002\036\002!UtGn\\2bY&TX\r\032(b[\026\004\003\"B#\001\t\003Z\023aB4qkRKWM\035\005\006\017\002!\t\006S\001\fi>|G\016^5q\035\006lW-F\001J!\ry!JO\005\003\027B\021aa\0249uS>t\007")
/* 3 */ public class GraphicsCard implements ItemTier, GPULike { private final Delegator parent; private final int tier; private final String unlocalizedName; public Seq<Object> tooltipData() { return GPULike.class.tooltipData(this); } private boolean showInItemList; private final int itemId; private Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon; @SideOnly(Side.CLIENT) public void tooltipLines(ItemStack stack, EntityPlayer player, List tooltip, boolean advanced) { ItemTier.class.tooltipLines(this, stack, player, tooltip, advanced); } public boolean showInItemList() { return this.showInItemList; } public void showInItemList_$eq(boolean x$1) { this.showInItemList = x$1; } public int itemId() { return this.itemId; } public Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon() { return this.li$cil$oc$common$item$traits$Delegate$$_icon; } public void li$cil$oc$common$item$traits$Delegate$$_icon_$eq(Option<IIcon> x$1) { this.li$cil$oc$common$item$traits$Delegate$$_icon = x$1; } public void li$cil$oc$common$item$traits$Delegate$_setter_$itemId_$eq(int x$1) { this.itemId = x$1; } public int maxStackSize() { return Delegate.class.maxStackSize((Delegate)this); } public ItemStack createItemStack(int amount) { return Delegate.class.createItemStack((Delegate)this, amount); } public boolean doesSneakBypassUse(BlockPosition position, EntityPlayer player) { return Delegate.class.doesSneakBypassUse((Delegate)this, position, player); } public boolean onItemUseFirst(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUseFirst((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public boolean onItemUse(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUse((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public ItemStack onItemRightClick(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onItemRightClick((Delegate)this, stack, world, player); } public EnumAction getItemUseAction(ItemStack stack) { return Delegate.class.getItemUseAction((Delegate)this, stack); } public int getMaxItemUseDuration(ItemStack stack) { return Delegate.class.getMaxItemUseDuration((Delegate)this, stack); } public ItemStack onEaten(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onEaten((Delegate)this, stack, world, player); } public void onPlayerStoppedUsing(ItemStack stack, EntityPlayer player, int duration) { Delegate.class.onPlayerStoppedUsing((Delegate)this, stack, player, duration); } public void update(ItemStack stack, World world, Entity player, int slot, boolean selected) { Delegate.class.update((Delegate)this, stack, world, player, slot, selected); } public EnumRarity rarity(ItemStack stack) { return Delegate.class.rarity((Delegate)this, stack); } public int tierFromDriver(ItemStack stack) { return Delegate.class.tierFromDriver((Delegate)this, stack); } public int color(ItemStack stack, int pass) { return Delegate.class.color((Delegate)this, stack, pass); } public ItemStack getContainerItem(ItemStack stack) { return Delegate.class.getContainerItem((Delegate)this, stack); } public boolean hasContainerItem(ItemStack stack) { return Delegate.class.hasContainerItem((Delegate)this, stack); } public Option<String> displayName(ItemStack stack) { return Delegate.class.displayName((Delegate)this, stack); } public void tooltipExtended(ItemStack stack, List tooltip) { Delegate.class.tooltipExtended((Delegate)this, stack, tooltip); } public void tooltipCosts(ItemStack stack, List tooltip) { Delegate.class.tooltipCosts((Delegate)this, stack, tooltip); } public boolean isDamageable() { return Delegate.class.isDamageable((Delegate)this); } public int damage(ItemStack stack) { return Delegate.class.damage((Delegate)this, stack); } public int maxDamage(ItemStack stack) { return Delegate.class.maxDamage((Delegate)this, stack); } @SideOnly(Side.CLIENT) public Option<IIcon> icon() { return Delegate.class.icon((Delegate)this); } @SideOnly(Side.CLIENT) public void icon_$eq(IIcon value) { Delegate.class.icon_$eq((Delegate)this, value); } @SideOnly(Side.CLIENT) public Option<IIcon> icon(ItemStack stack, int pass) { return Delegate.class.icon((Delegate)this, stack, pass); } @SideOnly(Side.CLIENT) public void registerIcons(IIconRegister iconRegister) { Delegate.class.registerIcons((Delegate)this, iconRegister); } public boolean equals(ItemStack stack) { return Delegate.class.equals((Delegate)this, stack); } public int createItemStack$default$1() { return Delegate.class.createItemStack$default$1((Delegate)this); } public Delegator parent() { return this.parent; } public int tier() { return this.tier; } public GraphicsCard(Delegator parent, int tier) { Delegate.class.$init$((Delegate)this); ItemTier.class.$init$(this); GPULike.class.$init$(this);
/* 4 */     this.unlocalizedName = (new StringBuilder()).append(Delegate.class.unlocalizedName((Delegate)this)).append(BoxesRunTime.boxToInteger(tier)).toString(); } public String unlocalizedName() { return this.unlocalizedName; }
/*   */    public int gpuTier() {
/* 6 */     return tier();
/*   */   } public Option<String> tooltipName() {
/* 8 */     return Option$.MODULE$.apply(Delegate.class.unlocalizedName((Delegate)this));
/*   */   } }


/* Location:              C:\Users\shame\AppData\Roaming\PrismLauncher\instances\GT_New_Horizons_2.7.4_Java_17-21\.minecraft\mods\OpenComputers-1.10.30-GTNH.jar!\li\cil\oc\common\item\GraphicsCard.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */