/*   */ package li.cil.oc.common.item;
/*   */ @ScalaSignature(bytes = "\006\001=3A!\001\002\001\033\t\031r+\033:fY\026\0348OT3uo>\0248nQ1sI*\0211\001B\001\005SR,WN\003\002\006\r\00511m\\7n_:T!a\002\005\002\005=\034'BA\005\013\003\r\031\027\016\034\006\002\027\005\021A.[\002\001'\021\001a\002\006\016\021\005=\021R\"\001\t\013\003E\tQa]2bY\006L!a\005\t\003\r\005s\027PU3g!\t)\002$D\001\027\025\t9\"!\001\004ue\006LGo]\005\0033Y\021\001\002R3mK\036\fG/\032\t\003+mI!\001\b\f\003\021%#X-\034+jKJD\001B\b\001\003\006\004%\taH\001\007a\006\024XM\034;\026\003\001\002\"!\t\022\016\003\tI!a\t\002\003\023\021+G.Z4bi>\024\b\002C\023\001\005\003\005\013\021\002\021\002\017A\f'/\0328uA!Aq\005\001BA\002\023\005\001&\001\003uS\026\024X#A\025\021\005=Q\023BA\026\021\005\rIe\016\036\005\t[\001\021\t\031!C\001]\005AA/[3s?\022*\027\017\006\0020eA\021q\002M\005\003cA\021A!\0268ji\"91\007LA\001\002\004I\023a\001=%c!AQ\007\001B\001B\003&\021&A\003uS\026\024\b\005C\0038\001\021\005\001(\001\004=S:LGO\020\013\004siZ\004CA\021\001\021\025qb\0071\001!\021\0259c\0071\001*\021\035i\004A1A\005By\nq\"\0368m_\016\fG.\033>fI:\013W.Z\013\002A\021\001)R\007\002\003*\021!iQ\001\005Y\006twMC\001E\003\021Q\027M^1\n\005\031\013%AB*ue&tw\r\003\004I\001\001\006IaP\001\021k:dwnY1mSj,GMT1nK\002BQA\023\001\005R-\0131\002^8pYRL\007OT1nKV\tA\nE\002\020\033~J!A\024\t\003\r=\003H/[8o\001")
/*   */ public class WirelessNetworkCard implements ItemTier { private final Delegator parent; private int tier; private final String unlocalizedName;
/*   */   @SideOnly(Side.CLIENT)
/* 5 */   public void tooltipLines(ItemStack stack, EntityPlayer player, List tooltip, boolean advanced) { ItemTier.class.tooltipLines(this, stack, player, tooltip, advanced); } private boolean showInItemList; private final int itemId; private Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon; public boolean showInItemList() { return this.showInItemList; } public void showInItemList_$eq(boolean x$1) { this.showInItemList = x$1; } public int itemId() { return this.itemId; } public Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon() { return this.li$cil$oc$common$item$traits$Delegate$$_icon; } public void li$cil$oc$common$item$traits$Delegate$$_icon_$eq(Option<IIcon> x$1) { this.li$cil$oc$common$item$traits$Delegate$$_icon = x$1; } public void li$cil$oc$common$item$traits$Delegate$_setter_$itemId_$eq(int x$1) { this.itemId = x$1; } public Seq<Object> tooltipData() { return Delegate.class.tooltipData((Delegate)this); } public int maxStackSize() { return Delegate.class.maxStackSize((Delegate)this); } public ItemStack createItemStack(int amount) { return Delegate.class.createItemStack((Delegate)this, amount); } public boolean doesSneakBypassUse(BlockPosition position, EntityPlayer player) { return Delegate.class.doesSneakBypassUse((Delegate)this, position, player); } public boolean onItemUseFirst(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUseFirst((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public boolean onItemUse(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUse((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public ItemStack onItemRightClick(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onItemRightClick((Delegate)this, stack, world, player); } public EnumAction getItemUseAction(ItemStack stack) { return Delegate.class.getItemUseAction((Delegate)this, stack); } public int getMaxItemUseDuration(ItemStack stack) { return Delegate.class.getMaxItemUseDuration((Delegate)this, stack); } public ItemStack onEaten(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onEaten((Delegate)this, stack, world, player); } public void onPlayerStoppedUsing(ItemStack stack, EntityPlayer player, int duration) { Delegate.class.onPlayerStoppedUsing((Delegate)this, stack, player, duration); } public void update(ItemStack stack, World world, Entity player, int slot, boolean selected) { Delegate.class.update((Delegate)this, stack, world, player, slot, selected); } public EnumRarity rarity(ItemStack stack) { return Delegate.class.rarity((Delegate)this, stack); } public int tierFromDriver(ItemStack stack) { return Delegate.class.tierFromDriver((Delegate)this, stack); } public int color(ItemStack stack, int pass) { return Delegate.class.color((Delegate)this, stack, pass); } public ItemStack getContainerItem(ItemStack stack) { return Delegate.class.getContainerItem((Delegate)this, stack); } public boolean hasContainerItem(ItemStack stack) { return Delegate.class.hasContainerItem((Delegate)this, stack); } public Option<String> displayName(ItemStack stack) { return Delegate.class.displayName((Delegate)this, stack); } public void tooltipExtended(ItemStack stack, List tooltip) { Delegate.class.tooltipExtended((Delegate)this, stack, tooltip); } public void tooltipCosts(ItemStack stack, List tooltip) { Delegate.class.tooltipCosts((Delegate)this, stack, tooltip); } public boolean isDamageable() { return Delegate.class.isDamageable((Delegate)this); } public int damage(ItemStack stack) { return Delegate.class.damage((Delegate)this, stack); } public int maxDamage(ItemStack stack) { return Delegate.class.maxDamage((Delegate)this, stack); } @SideOnly(Side.CLIENT) public Option<IIcon> icon() { return Delegate.class.icon((Delegate)this); } @SideOnly(Side.CLIENT) public void icon_$eq(IIcon value) { Delegate.class.icon_$eq((Delegate)this, value); } @SideOnly(Side.CLIENT) public Option<IIcon> icon(ItemStack stack, int pass) { return Delegate.class.icon((Delegate)this, stack, pass); } @SideOnly(Side.CLIENT) public void registerIcons(IIconRegister iconRegister) { Delegate.class.registerIcons((Delegate)this, iconRegister); } public boolean equals(ItemStack stack) { return Delegate.class.equals((Delegate)this, stack); } public int createItemStack$default$1() { return Delegate.class.createItemStack$default$1((Delegate)this); } public Delegator parent() { return this.parent; } public int tier() { return this.tier; } public void tier_$eq(int x$1) { this.tier = x$1; } public WirelessNetworkCard(Delegator parent, int tier) { Delegate.class.$init$((Delegate)this); ItemTier.class.$init$(this);
/* 6 */     this.unlocalizedName = (new StringBuilder()).append(Delegate.class.unlocalizedName((Delegate)this)).append(BoxesRunTime.boxToInteger(tier())).toString(); } public String unlocalizedName() { return this.unlocalizedName; }
/*   */    public Option<String> tooltipName() {
/* 8 */     return Option$.MODULE$.apply(Delegate.class.unlocalizedName((Delegate)this));
/*   */   } }


/* Location:              C:\Users\shame\AppData\Roaming\PrismLauncher\instances\GT_New_Horizons_2.7.4_Java_17-21\.minecraft\mods\OpenComputers-1.10.30-GTNH.jar!\li\cil\oc\common\item\WirelessNetworkCard.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */