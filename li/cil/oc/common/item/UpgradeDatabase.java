/*    */ package li.cil.oc.common.item;
/*    */ 
/*    */ 
/*    */ @ScalaSignature(bytes = "\006\001U4A!\001\002\001\033\tyQ\013]4sC\022,G)\031;bE\006\034XM\003\002\004\t\005!\021\016^3n\025\t)a!\001\004d_6lwN\034\006\003\017!\t!a\\2\013\005%Q\021aA2jY*\t1\"\001\002mS\016\0011\003\002\001\017)i\001\"a\004\n\016\003AQ\021!E\001\006g\016\fG.Y\005\003'A\021a!\0218z%\0264\007CA\013\031\033\0051\"BA\f\003\003\031!(/Y5ug&\021\021D\006\002\t\t\026dWmZ1uKB\021QcG\005\0039Y\021\001\"\023;f[RKWM\035\005\t=\001\021)\031!C\001?\0051\001/\031:f]R,\022\001\t\t\003C\tj\021AA\005\003G\t\021\021\002R3mK\036\fGo\034:\t\021\025\002!\021!Q\001\n\001\nq\001]1sK:$\b\005\003\005(\001\t\025\r\021\"\001)\003\021!\030.\032:\026\003%\002\"a\004\026\n\005-\002\"aA%oi\"AQ\006\001B\001B\003%\021&A\003uS\026\024\b\005C\0030\001\021\005\001'\001\004=S:LGO\020\013\004cI\032\004CA\021\001\021\025qb\0061\001!\021\0259c\0061\001*\021\035)\004A1A\005BY\nq\"\0368m_\016\fG.\033>fI:\013W.Z\013\002oA\021\001(P\007\002s)\021!hO\001\005Y\006twMC\001=\003\021Q\027M^1\n\005yJ$AB*ue&tw\r\003\004A\001\001\006IaN\001\021k:dwnY1mSj,GMT1nK\002BQA\021\001\005R\r\0131\002^8pYRL\007OT1nKV\tA\tE\002\020\013^J!A\022\t\003\r=\003H/[8o\021\025A\005\001\"\025J\003-!xn\0347uSB$\025\r^1\026\003)\0032a\023(*\033\005a%BA'\021\003)\031w\016\0347fGRLwN\\\005\003\0372\0231aU3r\021\025\t\006\001\"\021S\003\031\021\030M]5usR\0211\013\030\t\003)jk\021!\026\006\003\007YS!a\026-\002\0235Lg.Z2sC\032$(\"A-\002\0079,G/\003\002\\+\nQQI\\;n%\006\024\030\016^=\t\013u\003\006\031\0010\002\013M$\030mY6\021\005Q{\026B\0011V\005%IE/Z7Ti\006\0347\016C\003c\001\021\0053-\001\tp]&#X-\034*jO\"$8\t\\5dWR!a\fZ3m\021\025i\026\r1\001_\021\0251\027\r1\001h\003\0259xN\0357e!\tA'.D\001j\025\t1g+\003\002lS\n)qk\034:mI\")Q.\031a\001]\0061\001\017\\1zKJ\004\"a\\:\016\003AT!!\\9\013\005I4\026AB3oi&$\0300\003\002ua\naQI\034;jif\004F.Y=fe\002")
/*    */ public class UpgradeDatabase implements ItemTier {
/*    */   private final Delegator parent;
/*    */   private final int tier;
/*    */   private final String unlocalizedName;
/*    */   
/*    */   @SideOnly(Side.CLIENT)
/* 11 */   public void tooltipLines(ItemStack stack, EntityPlayer player, List tooltip, boolean advanced) { ItemTier.class.tooltipLines(this, stack, player, tooltip, advanced); } private boolean showInItemList; private final int itemId; private Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon; public boolean showInItemList() { return this.showInItemList; } public void showInItemList_$eq(boolean x$1) { this.showInItemList = x$1; } public int itemId() { return this.itemId; } public Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon() { return this.li$cil$oc$common$item$traits$Delegate$$_icon; } public void li$cil$oc$common$item$traits$Delegate$$_icon_$eq(Option<IIcon> x$1) { this.li$cil$oc$common$item$traits$Delegate$$_icon = x$1; } public void li$cil$oc$common$item$traits$Delegate$_setter_$itemId_$eq(int x$1) { this.itemId = x$1; } public int maxStackSize() { return Delegate.class.maxStackSize((Delegate)this); } public ItemStack createItemStack(int amount) { return Delegate.class.createItemStack((Delegate)this, amount); } public boolean doesSneakBypassUse(BlockPosition position, EntityPlayer player) { return Delegate.class.doesSneakBypassUse((Delegate)this, position, player); } public boolean onItemUseFirst(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUseFirst((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public boolean onItemUse(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUse((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public EnumAction getItemUseAction(ItemStack stack) { return Delegate.class.getItemUseAction((Delegate)this, stack); } public int getMaxItemUseDuration(ItemStack stack) { return Delegate.class.getMaxItemUseDuration((Delegate)this, stack); } public ItemStack onEaten(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onEaten((Delegate)this, stack, world, player); } public void onPlayerStoppedUsing(ItemStack stack, EntityPlayer player, int duration) { Delegate.class.onPlayerStoppedUsing((Delegate)this, stack, player, duration); } public void update(ItemStack stack, World world, Entity player, int slot, boolean selected) { Delegate.class.update((Delegate)this, stack, world, player, slot, selected); } public int tierFromDriver(ItemStack stack) { return Delegate.class.tierFromDriver((Delegate)this, stack); } public int color(ItemStack stack, int pass) { return Delegate.class.color((Delegate)this, stack, pass); } public ItemStack getContainerItem(ItemStack stack) { return Delegate.class.getContainerItem((Delegate)this, stack); } public boolean hasContainerItem(ItemStack stack) { return Delegate.class.hasContainerItem((Delegate)this, stack); } public Option<String> displayName(ItemStack stack) { return Delegate.class.displayName((Delegate)this, stack); } public void tooltipExtended(ItemStack stack, List tooltip) { Delegate.class.tooltipExtended((Delegate)this, stack, tooltip); } public void tooltipCosts(ItemStack stack, List tooltip) { Delegate.class.tooltipCosts((Delegate)this, stack, tooltip); } public boolean isDamageable() { return Delegate.class.isDamageable((Delegate)this); } public int damage(ItemStack stack) { return Delegate.class.damage((Delegate)this, stack); } public int maxDamage(ItemStack stack) { return Delegate.class.maxDamage((Delegate)this, stack); } @SideOnly(Side.CLIENT) public Option<IIcon> icon() { return Delegate.class.icon((Delegate)this); } @SideOnly(Side.CLIENT) public void icon_$eq(IIcon value) { Delegate.class.icon_$eq((Delegate)this, value); } @SideOnly(Side.CLIENT) public Option<IIcon> icon(ItemStack stack, int pass) { return Delegate.class.icon((Delegate)this, stack, pass); } @SideOnly(Side.CLIENT) public void registerIcons(IIconRegister iconRegister) { Delegate.class.registerIcons((Delegate)this, iconRegister); } public boolean equals(ItemStack stack) { return Delegate.class.equals((Delegate)this, stack); } public int createItemStack$default$1() { return Delegate.class.createItemStack$default$1((Delegate)this); } public Delegator parent() { return this.parent; } public int tier() { return this.tier; } public UpgradeDatabase(Delegator parent, int tier) { Delegate.class.$init$((Delegate)this); ItemTier.class.$init$(this);
/* 12 */     this.unlocalizedName = (new StringBuilder()).append(Delegate.class.unlocalizedName((Delegate)this)).append(BoxesRunTime.boxToInteger(tier)).toString(); } public String unlocalizedName() { return this.unlocalizedName; }
/*    */    public Option<String> tooltipName() {
/* 14 */     return Option$.MODULE$.apply(Delegate.class.unlocalizedName((Delegate)this));
/*    */   } public Seq<Object> tooltipData() {
/* 16 */     return (Seq<Object>)Seq$.MODULE$.apply((Seq)Predef$.MODULE$.wrapIntArray(new int[] { Settings$.MODULE$.get().databaseEntriesPerTier()[tier()] }));
/*    */   } public EnumRarity rarity(ItemStack stack) {
/* 18 */     return Rarity$.MODULE$.byTier(tier());
/*    */   }
/*    */   public ItemStack onItemRightClick(ItemStack stack, World world, EntityPlayer player) {
/* 21 */     if (player.func_70093_af())
/*    */     
/*    */     { 
/*    */       
/* 25 */       if (stack.func_77942_o() && stack.func_77978_p().func_74764_b((new StringBuilder()).append(Settings$.MODULE$.namespace()).append("items").toString()))
/* 26 */       { stack.func_77982_d(null);
/* 27 */         player.func_71038_i(); }  }
/*    */     else { player.openGui(OpenComputers$.MODULE$, GuiType$.MODULE$.Database().id(), world, 0, 0, 0); player.func_71038_i(); }
/* 29 */      return stack;
/*    */   }
/*    */ }


/* Location:              C:\Users\shame\AppData\Roaming\PrismLauncher\instances\GT_New_Horizons_2.7.4_Java_17-21\.minecraft\mods\OpenComputers-1.10.30-GTNH.jar!\li\cil\oc\common\item\UpgradeDatabase.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */