/*    */ package li.cil.oc.common.item;
/*    */ 
/*    */ import li.cil.oc.common.item.traits.Delegate;
/*    */ import net.minecraft.entity.player.EntityPlayer;
/*    */ import net.minecraft.item.ItemStack;
/*    */ 
/*    */ @ScalaSignature(bytes = "\006\00194A!\001\002\001\033\tYQ\013]4sC\022,G+\0318l\025\t\031A!\001\003ji\026l'BA\003\007\003\031\031w.\\7p]*\021q\001C\001\003_\016T!!\003\006\002\007\rLGNC\001\f\003\ta\027n\001\001\024\t\001qAC\007\t\003\037Ii\021\001\005\006\002#\005)1oY1mC&\0211\003\005\002\007\003:L(+\0324\021\005UAR\"\001\f\013\005]\021\021A\002;sC&$8/\003\002\032-\tAA)\0327fO\006$X\r\005\002\0267%\021AD\006\002\t\023R,W\016V5fe\"Aa\004\001BC\002\023\005q$\001\004qCJ,g\016^\013\002AA\021\021EI\007\002\005%\0211E\001\002\n\t\026dWmZ1u_JD\001\"\n\001\003\002\003\006I\001I\001\ba\006\024XM\034;!\021\0259\003\001\"\001)\003\031a\024N\\5u}Q\021\021F\013\t\003C\001AQA\b\024A\002\001BQ\001\f\001\005B5\nA\002^8pYRL\007\017T5oKN$RAL\031=\013Z\003\"aD\030\n\005A\002\"\001B+oSRDQAM\026A\002M\nQa\035;bG.\004\"\001\016\036\016\003UR!a\001\034\013\005]B\024!C7j]\026\034'/\0314u\025\005I\024a\0018fi&\0211(\016\002\n\023R,Wn\025;bG.DQ!P\026A\002y\na\001\0357bs\026\024\bCA D\033\005\001%BA\037B\025\t\021e'\001\004f]RLG/_\005\003\t\002\023A\"\0228uSRL\b\013\\1zKJDQAR\026A\002\035\013q\001^8pYRL\007\017E\002I\033>k\021!\023\006\003\025.\013A!\036;jY*\tA*\001\003kCZ\f\027B\001(J\005\021a\025n\035;\021\005A\033fBA\bR\023\t\021\006#\001\004Qe\026$WMZ\005\003)V\023aa\025;sS:<'B\001*\021\021\02596\0061\001Y\003!\tGM^1oG\026$\007CA\bZ\023\tQ\006CA\004C_>dW-\0318)\t-b\006.\033\t\003;\032l\021A\030\006\003?\002\f!B]3mCVt7\r[3s\025\t\t'-A\002g[2T!a\0313\002\t5|Gm\035\006\002K\006\0311\r]<\n\005\035t&\001C*jI\026|e\016\\=\002\013Y\fG.^3%\003)L!a\0337\002\r\rc\025*\022(U\025\tig,\001\003TS\022,\007")
/*    */ public class UpgradeTank implements ItemTier {
/*    */   private final Delegator parent;
/*    */   private boolean showInItemList;
/*    */   
/* 12 */   public boolean showInItemList() { return this.showInItemList; } private final int itemId; private Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon; public void showInItemList_$eq(boolean x$1) { this.showInItemList = x$1; } public int itemId() { return this.itemId; } public Option<IIcon> li$cil$oc$common$item$traits$Delegate$$_icon() { return this.li$cil$oc$common$item$traits$Delegate$$_icon; } public void li$cil$oc$common$item$traits$Delegate$$_icon_$eq(Option<IIcon> x$1) { this.li$cil$oc$common$item$traits$Delegate$$_icon = x$1; } public void li$cil$oc$common$item$traits$Delegate$_setter_$itemId_$eq(int x$1) { this.itemId = x$1; } public String unlocalizedName() { return Delegate.class.unlocalizedName((Delegate)this); } public Option<String> tooltipName() { return Delegate.class.tooltipName((Delegate)this); } public Seq<Object> tooltipData() { return Delegate.class.tooltipData((Delegate)this); } public int maxStackSize() { return Delegate.class.maxStackSize((Delegate)this); } public ItemStack createItemStack(int amount) { return Delegate.class.createItemStack((Delegate)this, amount); } public boolean doesSneakBypassUse(BlockPosition position, EntityPlayer player) { return Delegate.class.doesSneakBypassUse((Delegate)this, position, player); } public boolean onItemUseFirst(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUseFirst((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public boolean onItemUse(ItemStack stack, EntityPlayer player, BlockPosition position, int side, float hitX, float hitY, float hitZ) { return Delegate.class.onItemUse((Delegate)this, stack, player, position, side, hitX, hitY, hitZ); } public ItemStack onItemRightClick(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onItemRightClick((Delegate)this, stack, world, player); } public EnumAction getItemUseAction(ItemStack stack) { return Delegate.class.getItemUseAction((Delegate)this, stack); } public int getMaxItemUseDuration(ItemStack stack) { return Delegate.class.getMaxItemUseDuration((Delegate)this, stack); } public ItemStack onEaten(ItemStack stack, World world, EntityPlayer player) { return Delegate.class.onEaten((Delegate)this, stack, world, player); } public void onPlayerStoppedUsing(ItemStack stack, EntityPlayer player, int duration) { Delegate.class.onPlayerStoppedUsing((Delegate)this, stack, player, duration); } public void update(ItemStack stack, World world, Entity player, int slot, boolean selected) { Delegate.class.update((Delegate)this, stack, world, player, slot, selected); } public EnumRarity rarity(ItemStack stack) { return Delegate.class.rarity((Delegate)this, stack); } public int tierFromDriver(ItemStack stack) { return Delegate.class.tierFromDriver((Delegate)this, stack); } public int color(ItemStack stack, int pass) { return Delegate.class.color((Delegate)this, stack, pass); } public ItemStack getContainerItem(ItemStack stack) { return Delegate.class.getContainerItem((Delegate)this, stack); } public boolean hasContainerItem(ItemStack stack) { return Delegate.class.hasContainerItem((Delegate)this, stack); } public Option<String> displayName(ItemStack stack) { return Delegate.class.displayName((Delegate)this, stack); } public void tooltipExtended(ItemStack stack, List tooltip) { Delegate.class.tooltipExtended((Delegate)this, stack, tooltip); } public void tooltipCosts(ItemStack stack, List tooltip) { Delegate.class.tooltipCosts((Delegate)this, stack, tooltip); } public boolean isDamageable() { return Delegate.class.isDamageable((Delegate)this); } public int damage(ItemStack stack) { return Delegate.class.damage((Delegate)this, stack); } public int maxDamage(ItemStack stack) { return Delegate.class.maxDamage((Delegate)this, stack); } @SideOnly(Side.CLIENT) public Option<IIcon> icon() { return Delegate.class.icon((Delegate)this); } @SideOnly(Side.CLIENT) public void icon_$eq(IIcon value) { Delegate.class.icon_$eq((Delegate)this, value); } @SideOnly(Side.CLIENT) public Option<IIcon> icon(ItemStack stack, int pass) { return Delegate.class.icon((Delegate)this, stack, pass); } @SideOnly(Side.CLIENT) public void registerIcons(IIconRegister iconRegister) { Delegate.class.registerIcons((Delegate)this, iconRegister); } public boolean equals(ItemStack stack) { return Delegate.class.equals((Delegate)this, stack); } public int createItemStack$default$1() { return Delegate.class.createItemStack$default$1((Delegate)this); } public Delegator parent() { return this.parent; } public UpgradeTank(Delegator parent) { Delegate.class.$init$((Delegate)this); ItemTier.class.$init$(this); }
/*    */    @SideOnly(Side.CLIENT)
/*    */   public void tooltipLines(ItemStack stack, EntityPlayer player, List<String> tooltip, boolean advanced) {
/*    */     BoxedUnit boxedUnit;
/* 16 */     FluidStack fluidStack = FluidStack.loadFluidStackFromNBT(stack.func_77978_p().func_74775_l((new StringBuilder()).append(Settings$.MODULE$.namespace()).append("data").toString()));
/* 17 */     if (fluidStack != null) { FluidStack fluidStack1 = fluidStack;
/* 18 */       Boolean bool = BoxesRunTime.boxToBoolean(tooltip.add((new StringBuilder()).append(fluidStack1.getFluid().getLocalizedName(fluidStack1)).append(": ").append(BoxesRunTime.boxToInteger(fluidStack1.amount)).append("/16000").toString())); }
/* 19 */     else { boxedUnit = BoxedUnit.UNIT; }
/*    */     
/*    */     stack.func_77942_o() ? boxedUnit : BoxedUnit.UNIT;
/* 22 */     ItemTier.class.tooltipLines(this, stack, player, tooltip, advanced);
/*    */   }
/*    */ }


/* Location:              C:\Users\shame\AppData\Roaming\PrismLauncher\instances\GT_New_Horizons_2.7.4_Java_17-21\.minecraft\mods\OpenComputers-1.10.30-GTNH.jar!\li\cil\oc\common\item\UpgradeTank.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */