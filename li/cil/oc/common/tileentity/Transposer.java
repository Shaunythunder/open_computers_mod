/*    */ package li.cil.oc.common.tileentity;
/*    */ @ScalaSignature(bytes = "\006\001\0354A!\001\002\001\033\tQAK]1ogB|7/\032:\013\005\r!\021A\003;jY\026,g\016^5us*\021QAB\001\007G>lWn\0348\013\005\035A\021AA8d\025\tI!\"A\002dS2T\021aC\001\003Y&\034\001aE\002\001\035]\001\"aD\013\016\003AQ!aA\t\013\005I\031\022!C7j]\026\034'/\0314u\025\005!\022a\0018fi&\021a\003\005\002\013)&dW-\0228uSRL\bC\001\r\034\033\005I\"B\001\016\003\003\031!(/Y5ug&\021A$\007\002\f\013:4\030N]8o[\026tG\017C\003\037\001\021\005q$\001\004=S:LGO\020\013\002AA\021\021\005A\007\002\005!91\005\001b\001\n\003!\023A\003;sC:\034\bo\\:feV\tQ\005\005\002'a9\021q%\f\b\003Q-j\021!\013\006\003U\031\taa]3sm\026\024\030B\001\027*\003%\031w.\0349p]\026tG/\003\002/_\005QAK]1ogB|7/\032:\013\0051J\023BA\0313\005\025\021En\\2l\025\tqs\006\003\0045\001\001\006I!J\001\fiJ\fgn\0359pg\026\024\b\005C\0037\001\021\005q'\001\003o_\022,G#\001\035\021\005erT\"\001\036\013\005mb\024a\0028fi^|'o\033\006\003{\031\t1!\0319j\023\ty$H\001\nD_6\004xN\\3oi\016{gN\\3di>\024\bbB!\001\001\004%\tAQ\001\016Y\006\034Ho\0249fe\006$\030n\0348\026\003\r\003\"\001R$\016\003\025S\021AR\001\006g\016\fG.Y\005\003\021\026\023A\001T8oO\"9!\n\001a\001\n\003Y\025!\0057bgR|\005/\032:bi&|gn\030\023fcR\021Aj\024\t\003\t6K!AT#\003\tUs\027\016\036\005\b!&\013\t\0211\001D\003\rAH%\r\005\007%\002\001\013\025B\"\002\0351\f7\017^(qKJ\fG/[8oA!)A\013\001C!+\006I1-\0318Va\022\fG/\032\013\002-B\021AiV\005\0031\026\023qAQ8pY\026\fg\016C\003[\001\021\0053,\001\013sK\006$gI]8n\035\n#fi\034:TKJ4XM\035\013\003\031rCQ!X-A\002y\0131A\0342u!\ty\026-D\001a\025\ti\026#\003\002cA\nqaJ\021+UC\036\034u.\0349pk:$\007\"\0023\001\t\003*\027aE<sSR,Gk\034(C)\032{'oU3sm\026\024HC\001'g\021\025i6\r1\001_\001")
/*    */ public class Transposer extends TileEntity implements Environment { private final li.cil.oc.server.component.Transposer.Block transposer;
/*    */   private long lastOperation;
/*    */   
/*  6 */   public boolean isChangeScheduled() { return this.isChangeScheduled; } private boolean isChangeScheduled; private boolean moving; public void isChangeScheduled_$eq(boolean x$1) { this.isChangeScheduled = x$1; } public boolean moving() { return this.moving; } public void moving_$eq(boolean x$1) { this.moving = x$1; } public double xPosition() { return Environment.class.xPosition(this); } public double yPosition() { return Environment.class.yPosition(this); } public double zPosition() { return Environment.class.zPosition(this); } public void markChanged() { Environment.class.markChanged(this); } public boolean isConnected() { return Environment.class.isConnected(this); } public void initialize() { Environment.class.initialize(this); } public void func_145845_h() { Environment.class.updateEntity(this); } public void dispose() { Environment.class.dispose(this); } public void onMessage(Message message) { Environment.class.onMessage(this, message); } public void onConnect(Node node) { Environment.class.onConnect(this, node); } public void onDisconnect(Node node) { Environment.class.onDisconnect(this, node); } @Method(modid = "appliedenergistics2") public boolean prepareToMove() { return Environment.class.prepareToMove(this); } @Method(modid = "appliedenergistics2") public void doneMoving() { Environment.class.doneMoving(this); } public Object[] result(Seq args) { return Environment.class.result(this, args); } public World world() { return TileEntity.class.world((TileEntity)this); } public int x() { return TileEntity.class.x((TileEntity)this); } public int y() { return TileEntity.class.y((TileEntity)this); } public int z() { return TileEntity.class.z((TileEntity)this); } public BlockPosition position() { return TileEntity.class.position((TileEntity)this); } public Block block() { return TileEntity.class.block((TileEntity)this); } public boolean isClient() { return TileEntity.class.isClient((TileEntity)this); } public boolean isServer() { return TileEntity.class.isServer((TileEntity)this); } public void func_145829_t() { TileEntity.class.validate((TileEntity)this); } public void func_145843_s() { TileEntity.class.invalidate((TileEntity)this); } public void onChunkUnload() { TileEntity.class.onChunkUnload((TileEntity)this); } @SideOnly(Side.CLIENT) public void readFromNBTForClient(NBTTagCompound nbt) { TileEntity.class.readFromNBTForClient((TileEntity)this, nbt); } public void writeToNBTForClient(NBTTagCompound nbt) { TileEntity.class.writeToNBTForClient((TileEntity)this, nbt); } public void func_145839_a(NBTTagCompound nbt) { TileEntity.class.readFromNBT((TileEntity)this, nbt); } public void func_145841_b(NBTTagCompound nbt) { TileEntity.class.writeToNBT((TileEntity)this, nbt); } public Packet func_145844_m() { return TileEntity.class.getDescriptionPacket((TileEntity)this); } public void onDataPacket(NetworkManager manager, S35PacketUpdateTileEntity packet) { TileEntity.class.onDataPacket((TileEntity)this, manager, packet); } public Transposer() { TileEntity.class.$init$((TileEntity)this); Environment.class.$init$(this);
/*  7 */     this.transposer = new li.cil.oc.server.component.Transposer.Block(this);
/*    */ 
/*    */ 
/*    */ 
/*    */     
/* 12 */     this.lastOperation = 0L; } public li.cil.oc.server.component.Transposer.Block transposer() { return this.transposer; } public ComponentConnector node() { return transposer().node(); } public long lastOperation() { return this.lastOperation; } public void lastOperation_$eq(long x$1) { this.lastOperation = x$1; }
/*    */    public boolean canUpdate() {
/* 14 */     return false;
/*    */   }
/*    */   public void readFromNBTForServer(NBTTagCompound nbt) {
/* 17 */     Environment.class.readFromNBTForServer(this, nbt);
/* 18 */     transposer().load(nbt);
/*    */   }
/*    */   
/*    */   public void writeToNBTForServer(NBTTagCompound nbt) {
/* 22 */     Environment.class.writeToNBTForServer(this, nbt);
/* 23 */     transposer().save(nbt);
/*    */   } }


/* Location:              C:\Users\shame\AppData\Roaming\PrismLauncher\instances\GT_New_Horizons_2.7.4_Java_17-21\.minecraft\mods\OpenComputers-1.10.30-GTNH.jar!\li\cil\oc\common\tileentity\Transposer.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */