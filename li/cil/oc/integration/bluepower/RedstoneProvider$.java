/*    */ package li.cil.oc.integration.bluepower;
/*    */ 
/*    */ import com.bluepowermod.api.wire.redstone.IBundledDevice;
/*    */ import com.bluepowermod.api.wire.redstone.IRedstoneDevice;
/*    */ import net.minecraft.world.World;
/*    */ import net.minecraftforge.common.util.ForgeDirection;
/*    */ import scala.Function1;
/*    */ import scala.Serializable;
/*    */ import scala.Tuple3;
/*    */ import scala.runtime.BoxesRunTime;
/*    */ 
/*    */ public final class RedstoneProvider$ implements IRedstoneProvider, BundledRedstone.RedstoneProvider {
/*    */   public static final RedstoneProvider$ MODULE$;
/*    */   private final WeakHashMap<RedstoneAware, RedstoneDevice> redstoneDevices;
/*    */   private final WeakHashMap<BundledRedstoneAware, BundledRedstoneDevice> bundledRedstoneDevices;
/*    */   
/* 17 */   private RedstoneProvider$() { MODULE$ = this;
/* 18 */     this.redstoneDevices = scala.collection.mutable.WeakHashMap$.MODULE$.empty();
/*    */     
/* 20 */     this.bundledRedstoneDevices = scala.collection.mutable.WeakHashMap$.MODULE$.empty(); } public WeakHashMap<RedstoneAware, RedstoneDevice> redstoneDevices() { return this.redstoneDevices; } public WeakHashMap<BundledRedstoneAware, BundledRedstoneDevice> bundledRedstoneDevices() { return this.bundledRedstoneDevices; }
/*    */   
/*    */   public void init() {
/* 23 */     BPApi.getInstance().getRedstoneApi().registerRedstoneProvider(this);
/*    */     
/* 25 */     li.cil.oc.integration.util.BundledRedstone$.MODULE$.addProvider(this);
/*    */   }
/*    */   
/*    */   public IRedstoneDevice getRedstoneDeviceAt(World world, int x, int y, int z, ForgeDirection side, ForgeDirection face) { IRedstoneDevice iRedstoneDevice;
/* 29 */     TileEntity tileEntity = world.func_147438_o(x, y, z);
/* 30 */     if (tileEntity instanceof RedstoneAware) { RedstoneAware redstoneAware = (RedstoneAware)tileEntity; iRedstoneDevice = (IRedstoneDevice)redstoneDevices().getOrElseUpdate(redstoneAware, (Function0)new RedstoneProvider$$anonfun$getRedstoneDeviceAt$1(redstoneAware)); }
/* 31 */     else { iRedstoneDevice = null; }
/*    */     
/*    */     return iRedstoneDevice; } public final class RedstoneProvider$$anonfun$getRedstoneDeviceAt$1 extends AbstractFunction0<RedstoneDevice> implements Serializable {
/*    */     public static final long serialVersionUID = 0L; private final RedstoneAware x2$1; public final RedstoneDevice apply() { return new RedstoneDevice(this.x2$1); } public RedstoneProvider$$anonfun$getRedstoneDeviceAt$1(RedstoneAware x2$1) {} }
/*    */   public IBundledDevice getBundledDeviceAt(World world, int x, int y, int z, ForgeDirection side, ForgeDirection face) { IBundledDevice iBundledDevice;
/* 36 */     TileEntity tileEntity = world.func_147438_o(x, y, z);
/* 37 */     if (tileEntity instanceof BundledRedstoneAware) { BundledRedstoneAware bundledRedstoneAware = (BundledRedstoneAware)tileEntity; iBundledDevice = (IBundledDevice)bundledRedstoneDevices().getOrElseUpdate(bundledRedstoneAware, (Function0)new RedstoneProvider$$anonfun$getBundledDeviceAt$1(bundledRedstoneAware)); }
/* 38 */     else { iBundledDevice = null; }
/*    */     
/*    */     return iBundledDevice; } public final class RedstoneProvider$$anonfun$getBundledDeviceAt$1 extends AbstractFunction0<BundledRedstoneDevice> implements Serializable {
/*    */     public static final long serialVersionUID = 0L; private final BundledRedstoneAware x2$2; public final BundledRedstoneDevice apply() { return new BundledRedstoneDevice(this.x2$2); }
/*    */     public RedstoneProvider$$anonfun$getBundledDeviceAt$1(BundledRedstoneAware x2$2) {} }
/* 43 */   public int computeInput(BlockPosition pos, ForgeDirection side) { World world = (World)pos.world().get();
/* 44 */     Tuple3 tuple3 = new Tuple3(BoxesRunTime.boxToInteger(pos.x() + side.offsetX), BoxesRunTime.boxToInteger(pos.y() + side.offsetY), BoxesRunTime.boxToInteger(pos.z() + side.offsetZ)); if (tuple3 != null) { int nx = BoxesRunTime.unboxToInt(tuple3._1()), ny = BoxesRunTime.unboxToInt(tuple3._2()), nz = BoxesRunTime.unboxToInt(tuple3._3()); Tuple3 tuple32 = new Tuple3(BoxesRunTime.boxToInteger(nx), BoxesRunTime.boxToInteger(ny), BoxesRunTime.boxToInteger(nz)), tuple31 = tuple32; int i = BoxesRunTime.unboxToInt(tuple31._1()), j = BoxesRunTime.unboxToInt(tuple31._2()), k = BoxesRunTime.unboxToInt(tuple31._3());
/*    */ 
/*    */       
/* 47 */       return BoxesRunTime.unboxToInt(scala.Predef$.MODULE$.intArrayOps((int[])scala.Predef$.MODULE$.intArrayOps((int[])scala.Predef$.MODULE$.refArrayOps((Object[])scala.Predef$.MODULE$.refArrayOps((Object[])ForgeDirection.values()).map((Function1)new RedstoneProvider$$anonfun$computeInput$2(world, i, j, k), scala.Array$.MODULE$.canBuildFrom(scala.reflect.ClassTag$.MODULE$.apply(IRedstoneDevice.class)))).collect((PartialFunction)new RedstoneProvider$$anonfun$computeInput$1(side), scala.Array$.MODULE$.canBuildFrom(scala.reflect.ClassTag$.MODULE$.Int()))).padTo(1, BoxesRunTime.boxToInteger(0), scala.Array$.MODULE$.canBuildFrom(scala.reflect.ClassTag$.MODULE$.Int()))).max((Ordering)scala.math.Ordering$Int$.MODULE$)); }  throw new MatchError(tuple3); } public final class RedstoneProvider$$anonfun$computeInput$2 extends AbstractFunction1<ForgeDirection, IRedstoneDevice> implements Serializable {
/*    */     public static final long serialVersionUID = 0L; private final World world$1; private final int nx$1; private final int ny$1; private final int nz$1; public final IRedstoneDevice apply(ForgeDirection x$2) { return BPApi.getInstance().getRedstoneApi().getRedstoneDevice(this.world$1, this.nx$1, this.ny$1, this.nz$1, x$2, ForgeDirection.UNKNOWN); } public RedstoneProvider$$anonfun$computeInput$2(World world$1, int nx$1, int ny$1, int nz$1) {} } public final class RedstoneProvider$$anonfun$computeInput$1 extends AbstractPartialFunction<IRedstoneDevice, Object> implements Serializable {
/*    */     public static final long serialVersionUID = 0L; private final ForgeDirection side$1; public final <A1 extends IRedstoneDevice, B1> B1 applyOrElse(IRedstoneDevice x1, Function1 default) { Object object; IRedstoneDevice iRedstoneDevice = x1; if (iRedstoneDevice != null) { IRedstoneDevice iRedstoneDevice1 = iRedstoneDevice; object = BoxesRunTime.boxToInteger(iRedstoneDevice1.getRedstonePower(this.side$1.getOpposite()) & 0xFF); } else { object = default.apply(x1); }  return (B1)object; } public final boolean isDefinedAt(IRedstoneDevice x1) { boolean bool; IRedstoneDevice iRedstoneDevice = x1; if (iRedstoneDevice != null) { bool = true; } else { bool = false; }  return bool; }
/*    */     public RedstoneProvider$$anonfun$computeInput$1(ForgeDirection side$1) {} }
/* 51 */   public int[] computeBundledInput(BlockPosition pos, ForgeDirection side) { World world = (World)pos.world().get();
/* 52 */     Tuple3 tuple3 = new Tuple3(BoxesRunTime.boxToInteger(pos.x() + side.offsetX), BoxesRunTime.boxToInteger(pos.y() + side.offsetY), BoxesRunTime.boxToInteger(pos.z() + side.offsetZ)); if (tuple3 != null) { int nx = BoxesRunTime.unboxToInt(tuple3._1()), ny = BoxesRunTime.unboxToInt(tuple3._2()), nz = BoxesRunTime.unboxToInt(tuple3._3()); Tuple3 tuple32 = new Tuple3(BoxesRunTime.boxToInteger(nx), BoxesRunTime.boxToInteger(ny), BoxesRunTime.boxToInteger(nz)), tuple31 = tuple32; int i = BoxesRunTime.unboxToInt(tuple31._1()), j = BoxesRunTime.unboxToInt(tuple31._2()), k = BoxesRunTime.unboxToInt(tuple31._3());
/* 53 */       int[][] inputs = (int[][])scala.Predef$.MODULE$.refArrayOps((Object[])scala.Predef$.MODULE$.refArrayOps((Object[])scala.Predef$.MODULE$.refArrayOps((Object[])ForgeDirection.values()).map((Function1)new RedstoneProvider$$anonfun$2(world, i, j, k), scala.Array$.MODULE$.canBuildFrom(scala.reflect.ClassTag$.MODULE$.apply(IBundledDevice.class)))).collect((PartialFunction)new RedstoneProvider$$anonfun$1(side), scala.Array$.MODULE$.canBuildFrom(scala.reflect.ClassTag$.MODULE$.apply(scala.runtime.ScalaRunTime$.MODULE$.arrayClass(int.class)))))
/*    */         
/* 55 */         .filter((Function1)new RedstoneProvider$$anonfun$3());
/* 56 */       return scala.Predef$.MODULE$.refArrayOps((Object[])inputs).isEmpty() ? null : 
/* 57 */         (int[])scala.Predef$.MODULE$.refArrayOps((Object[])inputs).reduce((Function2)new RedstoneProvider$$anonfun$computeBundledInput$1()); }  throw new MatchError(tuple3); } public final class RedstoneProvider$$anonfun$2 extends AbstractFunction1<ForgeDirection, IBundledDevice> implements Serializable { public static final long serialVersionUID = 0L; private final World world$2; private final int nx$2; private final int ny$2; private final int nz$2; public final IBundledDevice apply(ForgeDirection x$4) { return BPApi.getInstance().getRedstoneApi().getBundledDevice(this.world$2, this.nx$2, this.ny$2, this.nz$2, x$4, ForgeDirection.UNKNOWN); } public RedstoneProvider$$anonfun$2(World world$2, int nx$2, int ny$2, int nz$2) {} } public final class RedstoneProvider$$anonfun$1 extends AbstractPartialFunction<IBundledDevice, int[]> implements Serializable { public static final long serialVersionUID = 0L; private final ForgeDirection side$2; public final <A1 extends IBundledDevice, B1> B1 applyOrElse(IBundledDevice x2, Function1 default) { Object object; IBundledDevice iBundledDevice = x2; if (iBundledDevice != null) { IBundledDevice iBundledDevice1 = iBundledDevice; object = scala.Option$.MODULE$.apply(iBundledDevice1.getBundledOutput(this.side$2.getOpposite())).fold((Function0)new RedstoneProvider$$anonfun$1$$anonfun$applyOrElse$1(this), (Function1)new RedstoneProvider$$anonfun$1$$anonfun$applyOrElse$2(this)); } else { object = default.apply(x2); }  return (B1)object; } public final boolean isDefinedAt(IBundledDevice x2) { boolean bool; IBundledDevice iBundledDevice = x2; if (iBundledDevice != null) { bool = true; } else { bool = false; }  return bool; } public RedstoneProvider$$anonfun$1(ForgeDirection side$2) {} public final class RedstoneProvider$$anonfun$1$$anonfun$applyOrElse$1 extends AbstractFunction0<int[]> implements Serializable { public static final long serialVersionUID = 0L; public final int[] apply() { return null; } public RedstoneProvider$$anonfun$1$$anonfun$applyOrElse$1(RedstoneProvider$$anonfun$1 $outer) {} } public final class RedstoneProvider$$anonfun$1$$anonfun$applyOrElse$2 extends AbstractFunction1<byte[], int[]> implements Serializable { public static final long serialVersionUID = 0L; public final int[] apply(byte[] x$5) { return (int[])scala.Predef$.MODULE$.byteArrayOps(x$5).map((Function1)new RedstoneProvider$$anonfun$1$$anonfun$applyOrElse$2$$anonfun$apply$2(this), scala.Array$.MODULE$.canBuildFrom(scala.reflect.ClassTag$.MODULE$.Int())); } public RedstoneProvider$$anonfun$1$$anonfun$applyOrElse$2(RedstoneProvider$$anonfun$1 $outer) {} public final class RedstoneProvider$$anonfun$1$$anonfun$applyOrElse$2$$anonfun$apply$2 extends AbstractFunction1<Object, Object> implements Serializable { public static final long serialVersionUID = 0L; public final int apply(byte x$6) { return x$6 & 0xFF; } public RedstoneProvider$$anonfun$1$$anonfun$applyOrElse$2$$anonfun$apply$2(RedstoneProvider$$anonfun$1$$anonfun$applyOrElse$2 $outer) {} } } } public final class RedstoneProvider$$anonfun$3 extends AbstractFunction1<int[], Object> implements Serializable { public static final long serialVersionUID = 0L; public final boolean apply(int[] x$7) { return (x$7 != null); } } public final class RedstoneProvider$$anonfun$computeBundledInput$1 extends AbstractFunction2<int[], int[], int[]> implements Serializable { public final int[] apply(int[] a, int[] b) { return (int[])scala.runtime.Tuple2Zipped$.MODULE$.map$extension(scala.runtime.Tuple2Zipped$Ops$.MODULE$.zipped$extension(scala.Predef$.MODULE$.tuple2ToZippedOps(new Tuple2(a, b)), (Function1)new RedstoneProvider$$anonfun$computeBundledInput$1$$anonfun$apply$3(this), (Function1)new RedstoneProvider$$anonfun$computeBundledInput$1$$anonfun$apply$4(this)), (Function2)new RedstoneProvider$$anonfun$computeBundledInput$1$$anonfun$apply$1(this), scala.Array$.MODULE$.canBuildFrom(scala.reflect.ClassTag$.MODULE$.Int())); } public static final long serialVersionUID = 0L; public final class RedstoneProvider$$anonfun$computeBundledInput$1$$anonfun$apply$3 extends AbstractFunction1<int[], ArrayOps<Object>> implements Serializable { public static final long serialVersionUID = 0L; public final ArrayOps<Object> apply(int[] xs) { return scala.Predef$.MODULE$.intArrayOps(xs); } public RedstoneProvider$$anonfun$computeBundledInput$1$$anonfun$apply$3(RedstoneProvider$$anonfun$computeBundledInput$1 $outer) {} } public final class RedstoneProvider$$anonfun$computeBundledInput$1$$anonfun$apply$4 extends AbstractFunction1<int[], ArrayOps<Object>> implements Serializable { public static final long serialVersionUID = 0L; public final ArrayOps<Object> apply(int[] xs) { return scala.Predef$.MODULE$.intArrayOps(xs); } public RedstoneProvider$$anonfun$computeBundledInput$1$$anonfun$apply$4(RedstoneProvider$$anonfun$computeBundledInput$1 $outer) {} } public final class RedstoneProvider$$anonfun$computeBundledInput$1$$anonfun$apply$1 extends AbstractFunction2.mcIII.sp implements Serializable { public static final long serialVersionUID = 0L; public final int apply(int l, int r) { return apply$mcIII$sp(l, r); } public int apply$mcIII$sp(int l, int r) { return scala.math.package$.MODULE$.max(l, r); }
/*    */ 
/*    */       
/*    */       public RedstoneProvider$$anonfun$computeBundledInput$1$$anonfun$apply$1(RedstoneProvider$$anonfun$computeBundledInput$1 $outer) {} }
/*    */      }
/*    */ 
/*    */ }


/* Location:              C:\Users\shame\AppData\Roaming\PrismLauncher\instances\GT_New_Horizons_2.7.4_Java_17-21\.minecraft\mods\OpenComputers-1.10.30-GTNH.jar!\li\cil\oc\integration\bluepower\RedstoneProvider$.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */